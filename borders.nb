Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"gerPoly", " ", "=", " ", 
   RowBox[{"GeoPosition", "[", 
    RowBox[{"CountryData", "[", 
     RowBox[{"\"\<Germany\>\"", ",", " ", "\"\<Coordinates\>\""}], "]"}], 
    "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gridPoly", " ", "=", " ", 
   RowBox[{
    RowBox[{"GeoGridPosition", "[", 
     RowBox[{"gerPoly", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<AzimuthalEquidistant\>\"", ",", "  ", 
        RowBox[{"\"\<Centering\>\"", "\[Rule]", " ", 
         RowBox[{"GeoPosition", "[", 
          RowBox[{"{", 
           RowBox[{"51.16", ",", " ", "10.45"}], "}"}], "]"}]}]}], "}"}]}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70185727458381*^9, 3.701857276415847*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gerOutline", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", " ", 
      RowBox[{"Line", "[", " ", "gridPoly", "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.701857327655982*^9, 3.701857340439488*^9}, {
  3.701858152092259*^9, 3.7018582197238913`*^9}, {3.701858640522167*^9, 
  3.701858641561942*^9}}],

Cell[CellGroupData[{

Cell[BoxData["gerOutline"], "Input",
 CellChangeTimes->{{3.701858178270266*^9, 3.701858180627942*^9}}],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], LineBox[{CompressedData["
1:eJwUV3c81e8XJymh0iRaZoOIpGicZEXZoaxEQpEVEYXszV32uNed3MuVopJO
Q9qRItWXokFoiux+n99fn9f7dZ7P85znPOe8z/soegbaec8RERE5s0BE5P/f
2Z+GiVbzePgr4/EWox/hSLq/wuaaBA+Vj+2YuH44HDtC3p94NcFF03sDKdbU
MGTV7Jd7t4uHbuWMffZ/QvGdTLhD034e7iA3eabeDEWDvODt7/fx8PA3u+dm
Z0Lx91oTMl2bhweZX1I+9oRg4r++WY4cD61u/dgwkhuKhVQJ+vpxLj7I+psQ
cD0EnbrJn6amuGhsV5YZmhSCe1PHHvmMcvHDZ5pLvFUIrrI9/vULgZ16ze6f
xmB0kVqxflqUh21zG6t8LIKxlLtx2cVpLi549sFP6VQQXm2Nyv7cwsUaXaUt
ymcDcf351zU+97lYpeTPomoEodT4gs6XfC6Kh8o3r04Pwr1n7v70YnOx3PLQ
vfalgWhe6qOwh8rFDQbLp8XOBWCmXMqnpSwuNiyX2bb03CmUfmv8fH0hF/OK
vn700/HFsXCfZpEkLn6TYPddLTyJSzis1Czkov64cMhA/SSWZNSzWxu5WNkZ
Itd33huXGqknS9/josXgp0WTi7zxz4gjyfcXFz/3bNCP1TmBX+2eV/f+5KJw
4u2NnvLjqBN5PG0Zcd9d2gvdyBMeONFzau9XYv3Vt5na+3Z5YJW8lubDHi6q
1b0biipxxuGA3OK6dTyc91u/sUPZGTeVZ7pI6fJQNT9bibTcBY+WOtgVGPPw
TKqqhqP7EdxlYGMoXshDzqnfn4LyXbDiXNuumjIeNli/3hI5cxRf/ksbaszi
4ddjRqc+qh5Bl/5PKJXGQ6qZ3uSZT/aoWRtWr5zPQ/Si3gxTsMewN7Lru2g8
jPSS0/pmaItiIrtpmtU89Pn5rVhWwwpF6a/n0i/z8I1K5IlErhmajYoG+/N5
OG7L6dBbYYTLfvj6+jbycFOpg6Dux3a89DTUx5DYT2z03U2f+7poPnVx9EMY
D49pLyIvFZND9Y47O0iOPBR9QY41qTVBEZcFuX4GPLz9cNnqZUdNcVpZTu2c
Pg9lhk9MfG3Zj2vj0+ocN/IwSIwvJR8EOLPHP9NMlYfnLEpestdq4aZD473y
k1zcck9y+vAuFRjL9Xhp9R8XZX7Y7+cu3A6DLYf3l9zm4jLLCf2EVD24Wpsa
pFjMxfQJa17AMxNI3Wae45jIRZUwvm6Ggxn8axLY6l/gIucCXyxZ/iBIZikX
VJ/lotyiy/hF0wK+JaQcV4/gouJp45IlCw+CFYusIOfPxeyZpWKj4jbwquP9
FP0AFwMumY+a/7ABnVh9Q3MDLt69YupCT7UD3xKxesm5XDyXPS/DUd0eDORL
R/UInPDyZdEW68Ng8NNwbuAvDpKen6hc0eEAW3qMP31U5iKlq3uSGe4MsnUn
mpS+cHA/53HFvltusKKklmY/xcHvKYPSDvIe4HZbwewgcZ5cX6qp6FdX8Fv6
R+qRCxffQeTAf31HwXo0zHZLGBd7rV6X65GdYYthfE1RLBc1F3543PLODRS7
Hh/qukTES/ioY+LICei1kLS568vFMwovFP7LPAFs/t6nGyO5mPY7/fbicz6w
s0TP+tpmLj7/up3OeHgarEmFl54pcfG7sacq3z4AVh5atvbsNAdztHZN09WC
wCFjiiz2iYP538LP5P8IhrplSgfXIQd3pF7JlxMNgcOL9OxuNHPw65Eh/0an
EKA9vTvncyYH1VMspjWbQqGk4s952SIOek6r1Kf+Fwb7Nn2235vCwfHs+Ptd
tHDwD7oS+4bNwW87sX9/Xjg881gcf5/CwXvGpv1i4pGwfWfXRWsCx9y7odvX
Hwkt8r4DD9M4mJnsdSV2MBIoHjN3Oi5xUNbAZlDlexQsKpyynJ/Dwb6P8k4/
112AQ+dyvDZlcXB71dzDElcuQn37yMaYEg46yktuvNwYA0evfo2/fpODtSl9
ObkHY8Gwu7BHu4ODh3ed+qRnFweLQ0zsX4xzUHOHjBz3fRw8VC28u5Z4/9JH
DWY7LC+B44/DttMaXFw6NRu7pPUSTNVkqm/fwEWTVX5VO7zi4bSol/bhtVz0
rDyUdSckHvakNxpPS3Jxu7KxYbp6AgxSXO5+XcjFkp+rkl5BAtR17Iw2n0PU
B11CPcEjAeY92KTnJcLFSB8Jd6WcBMjh/gx2OcfFeM/8oGN2ibD+gd1dsSgu
XomSNpPoSwTFcVNv8XAurviQI6e/Lgk0XL+vjSbs9hZruRM5SRARr6hNP8bF
lgqGVW1HEkzL/3oxTtQD9cnP108/JEFpVXKNIVE/t76vazbelAyrE3fcDWRy
UdorY392ZTJU42qtqndEfspd7zxUnwz1BrsKygh+PPDbK8tdPgVuDqx8T6vn
4r4Fg6He4Smg0Gix4R+Di+tsVoN8awo8Fo/euEvIRV7Y7bLJX8R63Wub71Vw
cbCmzfGnWSoMkZOPCa5zkb0jLjfBNRUsDr9JP32Ni/nR6Y1LmlKhwFHDO7WW
i+OC+oKpZ6kg+Fu+Ko7w51B3cKyCYxo8i1d34r8l/Leaq3wsIQ1ck+dVuT7l
YkGhjt7xxDRQ7xv7+62bi2IBOlFHWtIg4te7tbfuEvXqeM/EwiAdPjV+NNye
x8UQzSWjjPE0mKcu37r7BBc9ntnKUc6kw6n0hq+eRH3ebvHsYDukQ9kGA+rR
vVwM0r22sJmTDvlHnuzcZUTcZ65wKLAtHRjpBoGkHUQ/DhMfi+lMh+p0V3Ux
bS7WiWs781dngIfm48ntsxxs6Ds99DAyHVTeRPeOMzioY6LhtV8uHRrtsxef
YnHQRFl/Hyc7HexCl/Eyyjio8GGBsvzrdLCYfa6kdIuD3E8bdt3bmAGSB848
ONXCwcro1sqxpgxwnHv14tQfot7Ux7M2zsuEy1K1up7vOWh8Tmq7kUMmkDwo
5/tecfA1ibNv6bZMOO61ZrqXS/BTgJLaIb9MoHZG/Uoo5iBtNuhF4KZMOPpi
zPswjYM1Js7D3H2ZEHf9SCE5koN7dxRpsXszIDb6+kQlgdeGbTindSMDatq8
V29IJvgxuYnxpToDTA0eMk4lclCZIRl6IycDDr4Wu1t1nIM95uOX0qUz4HLK
JOebHAf/M9AYvjySDpw1o9N90hxsOr0tInNDBvz2CAgbmmVjbPP1siyVDFCQ
378t6xMbRYv3Jw18Sgeb/BfGnf+xkVxz3MRkRzp4Msy7WxhsTNhz2v3jznQw
U4r+YpPLRs3XpoUOkunwJT3aPiGLjfZfZlblcNMgWbRR50oyGwepwuGTlDQw
OmPVdCKUjR3f1ttkFqeB1q65q2ds2Lj7W0TvDyLfwhLqQwcc2Ji942+tE5tY
nxHxr8qKjQ1jj2uLS9OgkDNqUk/Y98/99ivoRxpEPbcssz3IRivP3B/de9Ih
5EDXozYfNobh+NMaUjqkFz1YzfRk45HB31bLRTIgtKyEfl+LjcBgD6dUpsN4
2N9B8iY2mm5pdB0NSAeFZ9ESVovYuPG5YYJkaTokkO+k7hZhY+SHBD9183SQ
i9pGov1i4Z5dWyeomumwSM9C6PSIhSPnnILtQ9OhhrUuzfcBC12SH9wP46bD
y2Fz8xoWC61rbQwcX6WDtviH6pspLMQDYmd36mTA0ba4nR+iWciOdEvcujcD
qHpg9yKYhRsd7pwOkM2AR5vfDn48xMLdy1/TnKIz4Ni6HX875rPwtqu1l40g
A2yLld+wkYlPvymN7NXLBCnunbG3NUzsOvtz1kk5E0ZiPotbCJi48ztDumso
Ayz9Lg6yMpj4PkMkhnEyA+Iy05ct9GTig0HFV/7NGdBafOMXw5WJ7yRtz4+O
Z8DoggS5bFMmaiSvyZiRyQTjB3LS7puZ+Ff+SXZVUiZkNXgfPqbJxOxUO2EC
NROO1BW1FysxsWrV+aAH1zKh1cr+8KY1TLSUPbx+x2QmaHhcLVi4iol17Xa1
DzKzoL7hqa3wewXusdouElOfBYGdG/Sa+itQU/bfHZl52VAxRLuxkLBnKPdH
/7uXDfFODoucJZi4RPPn/lOd2fBs/VDP1znE/sM+7nN+Z8O8qSdQaEv4J6JN
aknPgT1//9v+OomJYj9UjYpbckDkH/nW0yomqiV36AQ/yoH3azzn+hM4dm1R
+5YluVDQ3ZLLKWFi4mkL6NqRC9vlZlWvlDJRckVDoa1tLsz5l73+1Qkmqn42
t84+ngvJalviv9sxUVnpY8uGuFz4kxL7r8KSiVf2yPl/zsmFuSNfA0UcmXhQ
TzSWfiUXFl3dV8Uk4rniee+qHzdzwV/HZGnEbiaGDKXcbt5AgmXPo1WUGipw
a9cz9W1KJKiNJic/La7A/VfvPCw9RIK7gWVWq3IqMMSBVbvvDglSaXc2KZ+u
QPftTpLHZkig6LbTQsunAk/906VVy5Hh9LszCqs3V+B8r7cnN20mw+WmAp/Q
+RX44dbtOd40MvxIbZ/NHGVgc+DyziU/yfBosP/Fg3cMrE5be/3CNBnK4w0d
RW8y8MKZhR4Ow2QwnexJ0EtjYFDGnI1fZSjgVmoRpxfPwC2H2tzUNCnApfd+
d2Yw0PSJxo4jYRRQfOpW8qSOgamLfrYseUCBYx/n7nl2hYHbRVVObFWgwl49
p+ufyxn4rKVg/5LjVHitc/F9Ap3wZzr+9ZdwKrCDrgXOoTKQHWO5qOYSFTLp
TS/OUBiYtGHgzi0eFXwEjXamScT5u9dWJ32lgrjk/AunzzCwRPa35+oNNBg9
5eLg6s/AoQz99SOpNDhqdePmrmgGjp/8ME9lTh746X9YF1nEQLrcLveRZXnQ
cNN73xCfgfzs5541IXnQ6lG3+30jAyUZd8ZNc/LgwK6292daGail/zGEszMf
/tgMKDe8ZmDYNsMHCy3zQW9FwI7tXxg48YpdeXVXPkQHvJjNnGWgcqXYgsmu
PNi8aufyGIUKTH5z86xWfR5Ac97JbykVyNM+0t22IB/M990vFKVVYJPyvn3R
c/OhW+vK+1BSBboeeKEpqp0PicmekiGiTBSui1MiEfsPB81RPLKOif1LbsQb
2ufD7cogFtmPqC93dcnS2/lwSUUxo8yZqIelm/LnuRfAywUeJx5GMIl+Ix6n
PVoAORxWytYDBF8MlifvflsAyjK9t8Z3MtHORfGX5upCeHPs6N4fy5k4869/
Qke8ENKh07JQhIl7ZO4ck15cCOfzigUzwMR1sW/9tucWwq3RKpsV2kzM8a/Y
oy5RBKHNcD7NjIkX6nf8kDIuAn/bomB5SSaWaWfmGRUXgcTNS40yoxW4c/qj
uhulCLZb/0uR6azAy6P/zl3gF4HcEqNVj6orUN+oqVEztwh0/H9N3yRXYG/M
g4E5jCJQ4XucPRlXgdMx8/f9l1MElYHVmRc9K/DJbHysVkUR1Fm/sWki8j8z
9Ft1b0wRPE+OzuxTrsAJmz3tGceKgFa2ezDmDwPzPs8IFJyKIHePYVjhKwbW
OZEnnMKKICND7dKnCww8ON/cSlarCA6NFUQ6nGTgsLxJ0KRbEWSGJuzO28tA
tS2hm92cSmEOJejbsbUMfO62x53+shRYRbSIOhUGym4/K7i/oAzkKwKfry+g
owybqUiyKYd+nStbwvzpaBp7bmNKRzmIGNK2/fago/TCXOfJj+Ug1jTv99WT
dFxWe540/1s5jMe2FbmF0HG6e9BDMpsOv6w2xm8+RUexpafGxbvoMPMgYiA/
gY53dpeucRqmA8/Z+5RRLB1XzMhZPfxFh4J+4428JDqWhbYrOkzSwdYFdd1T
6Hg7heJ/dCkDEiQWP74cQUeRnqbfzzcw4CnbWSo6jI7n/Xg5oWYMELxdy7jg
SceGYL8+e18GiHqrzQkxpKOKffEXt0AGyCZ/DjF0oaO+gDLHIp4ByrEhCVss
6bh3nnjponwGnNc9Pe5zmI5bOU4+c0Uq4Mn+v2/dCHxNTNRwCYF3vlxye70W
Ha+CpEBqdwX4bjCLNdpMx67orOkKzwro36VgcXMbHU/77FXbEVoB5ST38x1K
dIzJs4h4klgBYW8zeGor6NhstVPv/P0KMCVFvogzY2BL99sq454KOLI5L/Aj
8X4Z7ZK6dguZcHR9fFYygW3jxUxv6zDhWv76NWb2DDSeNRiJt2FCzjvbr2us
GPiFXvZ0QyMThrQatorrMfCP3LR6lzYLIu0yyM1LGbh0m7Gw+yQLos1DJR+o
MjCz70fAvRIW3JMKMqlXYmAi08vY4xYLjDou7n8gx8CGnrObLeNYoJ21Udp1
MQM1O/R3iUWxQLc1sdNOnIGKGU9oBUkseJA55738aiJ/1qyqjWGx4Nv67aW3
FRh4ZpFWw3c+C6a9S+MHp+nY+/qaWlsmCyTL34hZDtJxy/o1Z9xLWfCQoeNi
2EbH9Qe2XpyIZsH1s5Z54sV07Ly9eriggAV2gbnKaoV01B24MKjPZcEl/xy9
1td0DKIqKtweZUH3EVb30Ut0XHqARxm1YkO81Y0bIWeJfEwIaJSOYkNEt6mg
n8Cqk7v+nDrBBrMudT1cTEfffFVmWSMbFj6UcSffKEeKi2hN5ns2OG6Wqao/
Wo5n9dboCL+xwTXqhMkB93JkmE28cP+PDWsXu5DHbMrx2huNctduNkxMrhl+
61SOGRWpYQpDbMgd1wwnnynDRPdir8M9bFAdWyI4vKAMJWsCkrtvseG0MOBK
ZUwp9t5dGDzczoZVn95YrwguxYlKj/el94n9H32o0IgqxaGTdmMnX7LhEX+s
7fjiEhRv9zo39x8bvr1JfacoWYIii+P/JqlxYK7ddLWyVAkOC+lX+CIcuGhw
LKVWpgS/9pOGWsfZYKd56mFrZzH++c2MvztKnFdfPbVrQxE2/zFKaV7JgQ9l
mpT17QWYveCv6fBcDhjpb9JNyyPwJ3Jkzx82HFLzXXjkegEWElOxeDMbPLeP
vSq+WIAKygdSzI+z4YzPDC15WwEuVtZ/mh/AhgvGqreKJQuQvVT8Vo83G6S2
528lrSpA93JFOzEvNnxlpHwyrM3HtqnvUaNTLNguEnrv7Ml8fC83vzdSjA2y
sw25HkfyMZj6yrKghwUf9hwLz03Mx6Nyx089esECd1F+erR+Pnb379PKvMAC
rtPkn1nnfPyT7GkycJwFZLWaFW/N8vHEemUbqisLLnPlusd089FlqljqVDgL
en536Oub5xN6c3HX6AEWXNv27c/WU/ko8WBi5PVOFihMQpDXkgI0MYoZ1FRi
Qf8wiTF+rAB37nc7q7+FBf9YZ2SZBCaHfpoO+MyE5SX9POq8Agwuufp9fzkT
kpKpe+6V5mPfv6BE7xom3N1Q8Mc3LB+XF1RSfzCY4G+UyTUWzUfO+NHDonZM
eL9FvyROnvDvuUm3tAUTxDN4G94Q9munjqVusmTC584JMakF+TisIR7ZY8QE
I3qSgte8fKyw1VzjZ8CEIJP8eNqXPGxbv6VReS0T9M1vZ617mYdGpYfnrlJl
wulQXo/7dB6+pq2+5qzLhKKL21fcEMvHV1+/KheYMmH2Z1CnqnMeznfaz3hJ
8Et0Pat1zzQNPxq1LeSdZEL570LPx99ouEjgFleYzYRuywp11+s0jFI8YpJ5
hQl606azigIaHh2b3G2ix4JPKotf3UYajsVVRIyaseBQBjda+h0NZyqybhlY
s+CkVEPdzrV5eJqkU6xiyIL0rqPrlOPy8H1x5vulRizoc9pmm8fJw75r3zOS
TVmwLO152BpKHj6hJJ20I/D6ZaJ+KgF5mN4lv6ihjQXhMpnPQpfm4XdHBWeK
OBsW8U/mnlbIw6Wu1+QDFrOhKmK3ZmUEDdvDRANG5NlgfNBaYtV3Km7/96ZE
/AbBb1Ff1m9eQUWaC/n0EoLPArJO1B+qpOD4EpGR8ossAO+TsjnxFNwXlBPr
lcuCWaccVmQyBTWjt8f8O8+CHWo2x1s0Kcju+eLfTeRf64SK4W4lCi4qfV4s
bkzw7aG2L2JCCpY76F6bXcwCluUB5voZCn6nLBjLvceElcG/vzwYIuxtYyU+
t5kwN6JjrdlPCnqXFxSq+jEhatAoNXc+FQcUHvoc2EXw/57oJVGrqeg7zvQ1
3kO8T1Dz3qcSVHQ2ulZyQJ8JGQryFwLXUPH68rltD6SY8E9Zx79ymIKGowv/
i7FnQnWu9e/0HgrGcOODFxD9xu4db/6ScQrmiymH9n+tANvnUQNxryh4eZDe
LYYVgM389MdjFPzX9G5USPQv+Quadh+lqGi3+KZf1h8GWCqmKK7YREXjNR7m
ve0MmF72MCJnKRUf7TtoodXHgBMXYuSDlKnY9aTeeGcrA0zye1LHl1HxWfh9
96EOBmjN8ZnXtJyKj/ml4VqVDJiXsXbgJ3Feh2+1XksCA+TCRlLaif1nc023
JpIZUOPinU1mUdDM78r5JXsJfOAeRSGWuN9TnY+7tjNgfNxa7juXgqURCmPR
Vgwgm88/YLycglldWPtejgFSyePL7OhkzFh3+eHwIgbYOfbt94ono20QY/uJ
Z3TwVlqKz23J+PLJ5NI6Hh12/Whe87WAhO4bd577l0cHlYnUCk8nEpZ43PAW
OUmHB+ODv485klBkx/ntUkl0uBxekcRbRMIvU0V/J6zpsNe+j3O6Nxc9fxhQ
ZQ3ocJH8eUzvdy66rMmeJ2VCBwOVoNePDHNxel35qRoZOmwxPJB+b34ubl8T
fWT7Ejr8LbZU6ZEgobKv3osaOzo0jYflc9eQ8MaGTFdt4vxV98Rv9g7noqT0
sshYwp6k/mfpVhUSzrxePyFzmg7CAwUZertJOGee4Z+ACDqYTLWt9jAm4Q4W
ayUzhg70XZsGrszkYtrdWxcPEevNPJ/Z1rmQUEmDmPmI++48cSSw9CgZ/U06
vyRdp8NYQreOzQUyslZ6vu17SYcVuyUtxjLJSFm0rYkjxYAhs3Urgk6Q8ZQP
oR6n6eDLPDpgZE/G/X4S0lv/EXouecObM3QK5hbUdBXZM+DG9b0HX4tTcc/4
RouSy4Se2+m4f2CKgj8+v/tx9zMDvghXHf/7goI/81vGJWYYMPXXMTb4KQV7
ri+0Y+tUwDfNbfXGhRTU6NEpjompgMmmnZMJeRQcunuTxrlSAdpxPIX8Zgq+
sgtLPDRRAQ5eI73viXp8S9vwe54jE6YCPkn5PKRgmJL6hF8mwX8Dkc9nb1NQ
pYE2/1AlE64vfgb7Gii4umgv97KACduDpDuKmRR84/BjWK6BCernP5Wll1NQ
3XvNrRoCm0juVz1N+DN/nZ1DMKHHXl+UeGWHFHwQ1XHiCfH/Z7V1C6m3CH/M
uqyuPWSCTvr9hx01FFzvssU8hsB+Ww68nuJR8OlUu5TdfSZ4FZtBLIc471Gh
e2MzE1pXXJjfUUHBa7p9b2mEXZnsqfiikYIXD5xw637JhDqFibg7RD1oK5c8
KlzIAp/nuvqrFhF8Fpk8Ek70s9u4uf3iFzLaiehcV/ViwToT5ppnBRSEI3/G
n02wQGtbSXFLGBHf30fNXxL9eY/vbuklBB+MyVbqrAtlw/WhWz2+rRQc/ra/
8skjNjz/2npUO5CCLtQA9RR1DiR3MXac30jBFjNJcnEhoS9M35elS1Aw/Pds
fHYJB9r9JpKmFSn4PvXzsmwGB1aLx12eT/Bl4p3c4UstHPjMeGiQ10tGqtTd
tOglXPj9vk1tqSMZJRomRapDuFDxbLTNqJWEjYqfkz4kcGFeg1qQPIlE9B/z
naeTuHAw6d/lGhoJKb4OAZ3+XNibWRF5woGEq9gHnByOcoHZ0iYvDCRh+2ft
G2jKhVkV6ofFFiT8t7zt/Tx7LvxKsEt4aUfC0PqhwBJjLsx53JizpyEX1zc4
BsaKc8Hhc9Kpu745+EylZf3SXxzY+iZm3paAHOwszcgO/sSB8wdanNElB1c2
m5aHf+bA4j2MRN8TOZi1veZl9G8OPCtrbwPxbCSdOURbI8GFJ3sUmmKCs/DN
S5nh3H8cGB9iXvx5IQPrzsrLzuziwsqPd6g9b1JQyl/6TtFmLrwlv9UbmUzG
UXKj9fy/RLyW3LTddywFn2tUtO7s5YCE7B5B10Qy2hi4LJId44CIesL7yKvJ
SHGO1F/bw4H16Xx/S5VkfBCmfCg9gwOM7M/55oHJKIxpY1yJ5YD8cds3vNXJ
eJlBNm5L4sCpNmsbbfUkXHkBzr9awoEMESf1jIMJ+EPmYlxwGhtKNMQGBO7x
aHf+m7/XOAssRlKML9leQpEL5qSSKyzguVY9sD4ch2wbOfFyEgsWmjuvwRex
eP+h7912Qs/znNtcZscuYccKK6Mnc9lwv61Ia0n2JQy72PAxcA2hH8dAN1c6
HpeVdUzWHST08LINYudnLmGs5U4vxQg2zLbaLz9TGI/wrHyuVxcbDCRuVl0S
TURKYUnfqDgR/3vhmynpibijX8KyYgsH0v/LazGbScStOkV3QqgcOO6q9XGv
ShJa3hp1myFxoNTjp9tW0yTcGVXrcvEhBzw9dE1PKCdhSF9A43oifu+/KO2k
eSfh9IEtgWOdHMgll8b266Xg4IvNH1SNuBA02pRhuTINTQZz5BpCubBOQJUd
pWRgzJKA8XACfzIxuD1EzkSBYkRBRjYXSJ/0u2ZUs/Db3fadXulcuFui/Epi
PBOl/twJymJyIU6VzPQ3z0KyvJLlhUtc2JTtltAvnY2cY08ynaK48KbO5lCH
Tg4ujKx4Mf81FwxllAQ/U3Nw/ZNzvjHaPOhfu0f2aHIOnlex/X7Mjgey5v/C
F8/koNgjud3fqnlwtOKr7e2FuajpN6JfzufBf3mTtlvNcnHXdbbCKyEPIhe+
0Fp1LgdfdDxKuPeeB97nagNbd2ajo82teU+aeSAZsT7z8Nss7PHzyvz4hgcV
TyS7tjRmYSlH9MKrfzworzf4IDyUjQGt8srO8yuBq/K7mPMmCx17+aKzSyth
erfL+eM52ajpJcd3MamEzsKfNzpDsjGx8un2pgOV8MbVabb7Vzam87pHt7Eq
Yechids11jkoZ95fMc2phGXOjb8eC3JQ4t6pyu8plZDZ4PKQ9i8Hez7ifxfu
VkJcquLmxVtzcd2O86ovpaugSH1L84XluXjDcM8bhwNVULUuYffllzkY8vTA
p/jgKjC8+Ht2b3cOVgec2VFZUQXkXXeiSu/kYPc9jbdeb6rgZe7tOSWfc3DZ
RfO17xfxoa46JPnhqVw8evurRed0FaQ7aVJiX+eiqWFnm/xqPqza92SrhxHB
L6sC3y+T4IN00k0z610k/JSWcyRgGR+Wzm++FkbwUd79T4HLJqqgS8xzud5R
EnKcFu7586cKNHOycu6mkdCGQfL4PFgFSwdldr3wI6Ga00/Pzx+qYEH1p1Hq
ExJmOhpvyvtWBX5FyvPrmCRMGmanJryuguXjFSG/e0iY89GCZjtcBT3BZ1qy
jMm4OtDyOs2MD+UbPVN/bSPjPxOtM18V+bD6dmz7lf1kVFglujB9LR+UZS3V
TywhY5/SX9CZrYLHjjp1p88T/T7l3hhzEx8SZ+eJ+J4mY+dVHdHMKD6U1BuE
1OmRsXne4eXNV/kQsuq+EmmIhNu4ZSHWCXxo1uLufvachFjPKlRM5MOgx7jw
0XsS9tFEvrqRif22HxRxayFhcsfCvovpfDilFeZv10ZC159OfrwCPkxJvXhj
10TCm/eekeLK+XBu6fxHYUdIaK/D8h6u5sOy9Dbv0igS8jbN/9B1hw9By9QT
4j1IuNFo0eaMh3z46HIoL4DQb6GZmefLW/mwe/kNkZ5BEj68l9m88jkfPPOj
BBdGCL21eGXK2UE+oBTLk9xMwrurrZ+E/eLDhVdRx+IJ/zjyjI0DIgLISl5V
WymWi/EnHEZqNghgye1YOfszOeg223+bslIAgYs63Po+ZqOixBMt8d0C6I0f
FnP5nIU27iLL6OkCeKI962m9MguVVp9xG6MJ4MXPbytUZjMxzWur/d96AeR+
Tt8bzsxEl7WTFt+rBOAa9SCsvTATUw/vtNfjCyBipv9CwsIsvL2OpX25UQBW
TRc2VT7KxIQcsaeCNgF4zM/sfOyRhS9c1h5yVKyGA2bdwmfzsjHK7d2GkXnV
8Cbz5BH17ixULBkJujMrAOu+bi2b6Sycc7Xq07l+AZSU0sf0g7Lx19wd+/W7
BCBsFbPXPZKN1wzSyPHE/tcYKwTKrdm4tunKpsrLAngZyWvfV5ONH1J8Y2a4
Avh0Jtc7+x1xHmXr86irAlB44FEvfJaNHsJrSwLKCf8sD3Bq63Pw0dPnRWeJ
+/vtPbyiaWkufnlR0h9dTfizc/bj2I8c7B0Ppeq1C8DCo9l0j2QubrS/d1fv
nQBM1ApLdZbkYlFi/BjvuwB+ZVr3n/DIQSudNU89tlbDlduqmp2WOViTFeex
xqka+A4XloQR9sht/dE/Y6vhTv+eJYVqOdgqWAne96ohu2Cr8QZzol+r1KRf
+68aFoy+CCzTzsH9d0cujH2qhrqLszEutjkofa2i3f1XNTSVrwidIPr93Ndv
zpm8rYZrS0j6eSM5aG5PzTvfWg03qx9lfyP4yCzAddPLnmrIm7x1lUTNwc2r
6FPUyWpwjug69fQZwd+2HeS6tTUwlUx6pfc4B5VdhaL/9tZAs1lJ69+sXOTb
ZalcyK0Br6D63ZvTc3EqOl2bcqMGugJJUgbCXLzYYHjhaU8NFJ/r4e3XJeGx
dFdZvTlCyLm1+/GOBSQMt/ggdXOeEI41DFiazebigcKXsn+WCyHiZObR+AMk
DFvm/MLTVAg+FpUNhyJJ+FuEX/z2oBB21LE6fmaSsPX2+pPn3IVQ27W/rneK
hGXzIsV144XQGvBBy+03CeW6zDyH6YR90dJiQ4Ivvu2UH79dK4SCb+mxh2fI
+GfaHWQuC8FLwejU/UkK7tWm9mpnCKFb0izB2YqKf6YMZPrzheC+JEOUH07F
siHKNqtqIfw17aZ941DxYP97eVqVEFIlbi6IukrFUZVUje91Qngd8uPm7BMq
li+batpYLgSFI8t0PyjTUONuMq0qVwiPo3xXrdxBw7iAZ/vyw4WgkVBWN6NG
Q/FTJ4/OugqhenrXxvR9NBR+7ny3ykIIgoa89p86NLQrl5UK3COEwbhtv8bV
aWg5mBPsSuA7C+zTjTRpqP31cfeHfUIQ5m/21iXwSKHNLa/9QojRCfzTS+xf
/PSOiJ+REOihMaveadCw1uU/4QotIXz9Tm09CjS8KV2wdNNGIbCHH13er0vD
x+K7RjpkhbD6eKapxUka5vv56LcpCSE6YsdPNyUaupqvzL3yitg/+mvgETEq
Zqjfl6NH1MKNjZUPTIj56HBtkPvVC7WwQu9ZstZRCjaPiRhxztRC5LvW+OfS
RHztov+7H1gLc39ngvcsBY/S2h//9qyFi/EHYlQYFOxenpd/yacWqk/8fWB5
k4JGgxHXotxq4Zvf+ilBPqHPLy+PqbeshZ+/pGUf7KZiVf6E2syOWvjRsO7p
dBIVi9fMPmuVrQVKjeBPXhAVRxrKjstL18LLp/u0uon31E/R9YzoEIKk7dck
5mEqui8bU9p4TwjUbOuUzf9RcFnsqlWMGiGQ1thmvttMwUmZ2IjbfCE4xTgb
HppDQf+tUso2RP4c7VNckz1Axls2DXzJK0IImBpoLF5KxtbNX6YK6oWwK48d
WXeHhNJ1+2S6UQhSk3rnxRgkHOT1a+o+FMLyMw17bhL9MeJvxnDfC+L90ra3
+RE45PB/JIl2IeyLuvfKeysJiwdX31NtE8ITGdh3/EoubmKf7V/YKARtj9vy
fbq56HpzulzvhhBebHuoXNWQg2otanX1j4j3XHf413HnHFSYI2ImbBKCRfmp
jTbiOSi8zxfktQjhJcl9rdKnLDQ9MVO2hLj/rV1NZhvfZqD/tIX8w1IhXNa0
CS54mIZVJm5UXokQllVvNZgYSMGpW11J1kS9/XheY3rlRQpe7u1nbIsm4icb
9l+JeCqW0jx+dAQIYYXOm/x7t1PwQ/of1U8OQvCdL9qXPj8FizTXXX18WAhy
pw/zXrQlY2jTbEE5Ud+v14kcye1MRikXq9kWe4If2o1EZ9uSUKM+wyTYXAjK
Qm17uRdJOKQaus/YlngfMnf9qEYSyswR1P7yIO4XvP+jylQiGtz9VpQQJgRu
Xdmr3d6J2Hj4QwQzQgh6PuPxM9sTseE4+g/4C+GEZsYaR71EvFS9SbWXwJb7
bw7teZ2ArwOkXR2I/R/LFAaRZBKx/3ob8yVxft/ZR7+WfkrA+tIN1x4aCOGB
tcHEvzcJuDnx7cwI4f8olOttMEtA27FbeuaeQngz/7XC3aJ43P4u1Y18XAh5
xQvN8vXikd6zW+ZHqBAOcSooc5ZfwuX7F1vZpBD8Z21Vp1Mfh4MuJv1rifjP
dZX0EdkZh1FyRqpzy4TgFzrZfIiwz129o1g3TgiTUzsyLp+KQyOLVZW9fkI4
u85FPEs1CiMl/eZKEvU+3Xrm0eF1kRjo5qahQfArb/qsR8Ljcyjg7C5SX0Tk
WwZN587XcFRItZ//UJngl8PO/JDIcNwMetod8kKYn+uxvu5KOB4vuDOpqCaE
918tXDPLwrEz9MGr53pC0GnY/uGHTzjeiv56Kozgm9PTZbY1duF41jqnzNBY
CDXPnnqMm4TjOoF+7jMC63b3hik4nEXRGFLchS1CwH/LzB8kh6Lrozqr8mVC
gIPzRh0kQrHqxqt7SU9rYGCjdNRF2WDU7y+p3pBYA+/ELBj3dwbj7vYH/wXb
1ECs7yvTX+1B+Po//UkzsxooPCDvOjwQjP4fuuvn2dbA82Gy2sd5IcgTtrS3
HKiB5XGi1bO9Qbirpg0TTWqgc0tRp5Z1MCacM8vfta0GruSODBiFBeMY23P2
MaUauE5FYz+TgvHr8rdPYwuqYflE6OnN9cE4mtESoJtXDavjI4rtCFy4Mtvy
CbGe995sqXNOMNrEsZzdaNWgnFExIxYTjLofN72KIOycu9K4ntjf8LwL9xyp
GmTpUs5KqcHYlnxxfZN1Ndz/4bY7ticEw9jLefLziX6+9q9truFZLApM8Vfq
EUDPmpnNoWIRGN2oEJHCEMCo+jw3w1URuHFonrtHkQDON/s8WXEyAveodqio
5Algo26VWfPqCGySOsE9QthX6K+WTGuKwNBDcUEFbAHssxIxoNyOQBPraIeD
dAEs2DyYPK0eibuuduxfyREAp+4ld+xYJN5wyHzZzhIAySq/m8WNxAnzJwdN
ygSQ8c538sC+SNTwKzdNJv53Iev2T0pG4onjex+rRAiga+ffYy37ItBBXpX0
10sAqjqi1NDEMDQ7UKbUEycA0WUWp6t7wzDVInD1vEQBxOv2FllOncJVDUU6
zQ0CWOcUVnvkwwmM9TeMcj4rgOnOX6pXvX1wyxPpw4uMBNCWp67KvO+Na59f
+vtpMaHPhAMXnR28ceh7y3Hx93zY8kxS/1CzD9bZBG9U6+DDwm/jclvDfTB4
aKnpaUJ/r3hSdu/7Px+MrEz8dPoVH66c3D3YWuiDy/GOzNy7fDiT8I26p9QP
w+YbFA8Qev7Y6Zb6ki5fPCs2L4RD6P3X99dXyzj6oTdfteFmCR/kjcQ8dszx
w9/sj2kTxHxwcOOUasyQL57xXO7Xm8GHPdrpkuPOfnjpVsvjviI+aOXfjOc2
+qHhh9khK2K+6JpvuD1DwQ/H+9VfTKXxwTvMI/B4sx9+vPgzdheBk70T5iz3
8cWOzHt7bnjzIfTZIusr6acQjX2Cdm7mw2OXJkpNlQ+6Wxa7JzvxoWngRrvS
jDfOcORJByz5MHbVmnuA5oM7+8t3z3jwoXZ8vR753kkUP3jTrcedD1LLU4a5
7JM4ZlFr30/455lcGcpQ98bgJbP3f7D5EHxQRP67jTd+2TqwEe/zQbhp5b+k
Ck+s/TptA8sFMN5Y+HwT2xkPaXjfqFkvgEbTfRfju49ih+PecR0tAVT/unVy
+YQr2suurrFUJeaDn2dpXq8c8D/fpmoVEwGEff07mcg3xpey6vruWwVAFyuQ
+iSuCV+6U+8kf+SDEd35yZ+vR0BHZuzdHjoflmsY7k1LPwaVXxY4OUXzIdJF
66Av1Qve/vvXZ7iBD/dlNa6khnlD6YquD5oKfNjZ9PGev6c/+MfbjQdrEPGu
PT4aP/csGOresTz8lA/GNzc+X/n6HNRnSu5XfUzMg6/o+exl4VD9l16wCvlw
TdKZpff1HOiHyZv+5fNBj1sz5T4cCSMDMtYPb/PhSbVXoZV/FHBP2zuW/+TD
SnPtYpNzUdCUrmc508OHihbdR+J7o8F/htGp3ceHN77ts1Mq0RB+98z92EY+
XF+Vcbhm03n4IrcAKeeJ97nMPnjo8HnQkIu1NyPyZx7vfuTqd5FA/yQ+Jswj
5uUVhvsWH4mELZvF964h8mfu8hJfaXIk3M8JzfkXTuRLeNV+mVXnYRMxWP27
wAdnSQexrV/Ow6GwrSGHN1fBX49rYcf6z8L5fwv2RZdWQlnsY4m7X4Lhyz3P
Ly7qlXADTz9yNwmEsu+sw2GaldBru2oPU+sMyIo2/h5xqISE/KO7mSfPgEhj
QcqJfZWwoyel5oNzALQafh3yMa4EFZMPjtKDAXDry9knzdsqQWK4iZNc6w87
777ZRltcCe6ymHWY6gcj2Q6nVXp4IAgff9gd4gei45XnlWt58Gx48i1ruT8s
/ZzEonnwoOW0KZPMDoDR3+O2d615MOFtm95BDoYb1R9rpq14kKspczkSQqD7
HJdsq8sD78yX73J9Q0CJ2ub9Q4wHx1Ll3obsPgvSJhdDu2R4sEjTUKxDMRIS
Zh9NcMN4MLJa9NoY5yJcWCE9+jWZB+LHDKxLpGIhgiuyNciUB5Imw758iTiw
04z5O9+QB2Pbgz43N8XCnqMUjRWbeHAz/Z32B1YsXPGtuCr2jws3fhmNBYzE
Qv+XR6VaL7ngvOHKjv9YceC/mXtN7DEXZs6+pf4quwRX3GUrghfwYOuHlZVu
++PhnJ1ilM4rLhRLkNFYNQGGtybovyXwlWdnX4TKJsBGn/UFr65wYUAhMG22
KQHma1lk5xdzoavONSOzOQF2Gym7jyRyYZ35R7mDBxKhIIdn+/k8F85tfK27
WCsROEd/T61K48KlxVp/Oo8kwvE9epeHCfzq+BuP3l8JcHXloexbJVwoYb4K
W3kjEVTr6j25LcT+rtrmi5sSQSZwIPzuOh4UFkos+RiWCNsWeUc4KvCgb+Lj
ldediXA3/cPCdh0eHG/0eWH6MhGOLoh5+VaJB98Mf97N/ZMI/RdjSmM38uBz
/Yi749IkUHO0Pdl9kAfTLwdqmD2J4Gqg0j3HjQe/YvWfRLckQe0LN4P0Ah74
tZSp5Z1JAnGNZn8pIQ+GEtNWlfGTIEt88HbodR4YfNR92vkvCXbT/nxtY/Ig
/eGTF3xSMrwpUgu408CDnPXx5oY9ydBb2FBd08UDE4b0VNfdZNg9cGxl1wwP
nuwUGRM6pwDV2nLLsEQlyM9zWrCakQLGuO1j0JpKqIh56bVFkAKqN1wvXdav
hKULLHL+7UkBE5nETbecK2F1+Mp63/okWDLF+3LyPx6krRxYkHU/CaZl/zY4
LK2EQaWV42NZSWBIutWfLV0JVbykcy0qyRC71XdxnmEl9A1vPbVrWwqk5ec9
tHStBLVpOCzekQpuH/yaE59VwiK32hAlt0yIMovzV8FK+NMXbvXCMQduxZjS
JRdXQaJFTAD1Qw5sLPVKipapAqcTH9kXN+eC/0uTkzJqVaCvHCNfaJYLfKlD
Cx2WVcElW4XNhuG5IGX3Yf30qioQvD+60FqbBAP/vZUj06uAUZgmsK8jw+dS
ne8t6nxoX9zDvu5Ogeteji+Ke/kgKRfR3DZMgRHW5UtqOwWg2aQ0Em1DhdFg
aU+/FgE0p4UoNvpTYcvG/TPP3wrA9XzrAsNsKlBOVX9v+igAcr18a3EkFf7L
zDxT+p8AFopPekkVUcFv7E9qwGsBqNs35iklUkFlxqC4sFEABuuM2UM/qaCc
PRd8CgTgdNRDKKmSB6XhncyRWAE8WhzdasErgH+5c5oLyQKQvj7vkN/dAmhn
jq17dJrQL6mO8u67CkD8yHsxBXMBHD058ODeg3yIauTLrXQVwNtcuZMK5/Mh
jQ2DPgYCcOvZddTZNh8+fSuoZVkKoN0uuD7vVR5097VzY0wFoODG/Unj5oGv
/yLh9VMC2HTttly7XR6UHV8n9YM4723oy6Ag2TyIKatPj7Yn/FnTXdyxIA8G
SgP4b7cJoDfZn+dxnwavl+27sMhBAGrzhsrMOmjwok5dIc1JACM5dxeGEPiI
4OwDbTcB0b+pg/eTaeD7KSz9Z6AAlm9SXl0TSwMNxaMJZoTe0mudG6nhQoMc
B9Ww1HgBvExUeGTtSIO40ycusbMEkFCJiW8saWB+eLaalSOA8oaY2U1mNOh/
FxynRuAiB+GWXxo0aMm0yhlMIM4bKd16zoYG+6Nfft6RLYC+/sl3Nc40mNek
tcj2kgDi/Ob+JsXToCBhg5ptkACeX4bc4Fc0sAuk+Wo4CyDC0fjxiXQarD70
ecWqAwLQLX55JTWKBlvvyk/MIeKruCzig3wWDXrH+StvE/pg0w/HYldlGtxQ
VznopyaA3N8KNUwVGqC47E+NFQJ4nNb5nUHcL3jifWuMlACOR/6dUbCigbIm
1e/hOB9kgzj6x75QYZGKwYpL4gLgHf78/XIyFY5okheW/Ef0V7vL83qsqODc
v0fR5zcfRjy3tPjGUWAfycxZrYsP6Td+R05epMCcicj00ng+tM7NWauiTwEf
ZQ/JKSofpotcwnw2UcAmqZz5i+jHLYWiExqHKHDx/h0JGqE/hCT6/R0HKRC2
tUj/lQ8fzmO1wiJifcfuut+NB/ig8emUeNIwGRrPxzrP7OXDsJWfW8M3MtAW
irRt2kjot5RHL/s0iPVIOzXzrwrqXhxMiJ0mw+i+6FfWfVUgoZa60CaVAv4j
/hfWXa8CZ+kC+48zFPjJoLXWNlXB9ataAXoZFJh8rLYw6lUVLPli/2TZWWK9
ShDfWJwPEw0fP3+4QoE12c5nKoh63tQpMjNnMxWWy1uuViP8ydfo9EmRpcLx
1xorv0TwYfFGNcPFTVR4s2p/i2M2H1yOpdRJNFNBfOmXlUo1fCBv1VjZ+pUK
g2feCkyu82EKxnBuPRUOVqcFfn/Ch1uOvSd3DlOhHVt3rCP0j8TD3keq/VSo
PjmksoXQc+zTXR6OA1QYIV1xWvedDx5uZk5+ukQ+GmmIbif4RebPuQ2rFGnw
0N10pvYWH/DXj7h+oAFVnJvw9xofnmotdJo4QYPjI8ft1Vr4QG1+t+WEKw3e
LhR7OtFN+POg9kJBGQ0qbSVC+cQ88Cl8WTRrXR64u1yPvigtgMPP9g6dmyLq
6W4fMfQS88QnC3vx6DxY9zyKMmevAIYEDzYqkPKgSKLTZ4cGwTfXze3TD+WB
XqnMziAlASyzDo677ZIHu9ToHLaoAG597N14TysPPu96LO1E3Pexebzac+s8
EJzoMj31lg9VhQmtHMiDzNzMfrsBPjho/BLqeuWBhFxa0/t/xDyi8+N12Kk8
8NY+u1h7nQD2x3ONW8h5EFLrIXuO0NMpnX6frCryYDokYcSJ0I+y0hSXyPY8
+B1YEpRMnHe006V/b18evMyM/aolQvgf+fyhtijBX65/qJ7EepvZ0WQdlXyw
vtmf7k7E31Y0+fk2gt/8dpl42qwVwI/rPiL3bfLB4kHRKsYYH+b8znn7NyEf
yCk+FFlivVrOmSse+fnQWZXLfM/ig3lp3SahZQGc2XxI3pWor2DG1oOLIgrg
sqNBsojm//0POnmwtgA8buDeCDMBJP0wexh5ohC+1m5af89XAHPr7ijeyC6E
mXCZ3aLJBD+ffLravrUQ5HVuTvKIeTDxXtz02d5C8Ll+3XuunwB285MLoLkQ
nlj26aS6E/OrnEDN62EhuH6PlduiTsyfcfx136SLoDVxbVQD8R6vTlfOVTpZ
BJ8Dz9VazhNAqUnTecW0Ivgod3k+7wsfLNYEMUpdioDaaWeXXM+H73ftB1bG
FsE9B/Z0K6GXL1aqWClyi0DbcXKeHaHH9xza+3CITNipCyK7zvHBb3V5rmZz
EaQlKzA83PigY1VxfX5tEThr7bMyI+axVQXy/I5/RWB5fs/oF0k+GMwb0/m6
vRhyFiysVCewv+L4yCaXYmjnaFxfqsyHDKXlwozIYjiZvc8uX4YPUU8OLL1h
XgyMqSYfNQk+VGo/U8xdR2AvAxfn/ipYN97tophdDJMXeyW3zOfDpXv/zYn/
WAxVFp1m7QRfnL7sj8c7isGBzN275HUVbCFfypX5XAzR9Ecpw8+roPfGyvbH
/BKw6lGdHbhXBT4MddfilaWw7t7yp+02VdBpFpMfbl0Khcffvw48WAWfQ0gW
jiKlIPPF98pahSo44vl44ydGKUwG/M6cb1IF58QH97N/lMLVF292ntOtAs/6
q0scRkphl9Ot+xKqVWD40qPpGL8UNH0mh4RSVSCz/Lm/aH0pnNt6ha71txLE
XqzIeDRTCu175CX2yxL+hPAvKxD//7vZsN1qThU05xyQy9cqA1UvUSX8VgnO
+cnGxTZlUCw9wXh1pRJytizK9y4qg/DuOP/JC5Wwt204RjBbBiMeasYa5yth
wzbuxMqrZSCIikkqJvTTI/1yQ5meMlhz+maH66tKMDp9M8+osByi1Va+LJ2u
hKnS/yI+1JeDyOhKiqxSFeT+3SDKfloOB87eXCwvXQVRpxZn2FwrhyHJ5XtS
lKuA85ld92iqnJj/Lg+eIOJFVXrjoriEDhyd9WQJIj4yq60OjsvR4VWJaKOH
fhW8s3328A2x/pv8Gol+9SoY6JP7y5wtB6uY3cnMlVWQ08pYf2grHYJg/9uK
iUoYurMrbKcp8f/i1Gc9c6ugdIfd5S9H6LAks+eO5WAl7PryzLDuIB3CWxUV
LP8j5je/6zwjMh3WGg0tPsOrhANrpk7eT6ADt274qLtLJSx4nqnx9wwdEoW/
hqKsK2HUbJt0QDQdri0O3uKuWwlaqoyzzhZ0uFiXKHFyPhE/haafb13p4P1D
+8freZUApaLlDR50+DNQ99h2kAc2+54++E2ig2DRz/FqJOargbZ79Ed0GC6t
j/3J5kHIo2IXzS90mPN28m9qFA+SBq4OPRuiw0xg1aEDjsR8p7AoZLsUA6Y/
rV067cqDFa02+NGAAfHz/p79uZoHrOhrm+5NEPejfbH5NsAF5fMZhZc+06Hj
rKyqw1UuTHlItp5qoUPo+JGJN7VcODJSZCp8SIfvdXefZ1G5sNateO1BIR2e
73Nz8knmgubcpfNJ9+mQtQzU9f25oJIqt6nlFh1UyxZL9Xhx4Xjq/rA/Cxig
S3kvf9aeC8wzaoedFjMgvfVglJwucf6OgS6rbQzI6jnXmrGQC3sVnmW+sGDA
W/fZyPsruCCtq0nbkseALpGPPyYec8CTYXHroVUFKPN/LQ9P40Cm7sUjwaUV
4DE5bqtN40Cgn51TXH0FsG/eCHkTywHW2MG+a6MV8EDlwrB1Mwc27P3+tWUp
Eywf726h3/ofhVYeDuXbhVskJRRKIqKIaFWR8FhKisjeYi+R7DvZd7IvM2Nm
mBmzWWeGilCOSuXXagmhlFCIyBJK+d7vzzP3857nPGe5zznXNWz0pJC+1KPG
QIZXyx47ZrMRNbm5N2qMju4Z3fyepsNGEnf/SBWLMxDhGGM2dx8bUbrdKSaH
GSj04+FrzsfZSIuKc3HAZCOB58gdkwXzTboCzzLQtHn7/gdibFRKsF+qO8FA
ioX9Jtd/sNCo+qHxhvMMJDAX7Ev8yEK7PxSJnDRjoK5gFQRMFjIcjCcERDHQ
hF/KQXYcC0nGJ308H8pA6Z4wUNbDRD99Kk+1JzGQ5uiKy5tWJlLoPxc2X8hA
teszaHVRTMSWVJjobmAgfkNjW3dvJipPX5my/I+BTPdd0beRYCLqxpi+tA8M
FLS54vpvUSZyI1IUJEYYaPfBTS/vlTLQhdxlSQcBJkoPo8SnWzNQ6mklQd+1
TPSlQVjKVJWBgpesvvFhejaf3/f0jgwDiZHfy2soM9HNXzvjxL/T0ToR+89O
skz04cHtDdrP6Uj5xY4dj44z0V6bgZkDkXTkNhzvetyWiRKiGO314XTUSJ58
vuDIRPZmj87iLtPRqgXHzE0KTBQaJid7dqAEzcitXPTD7u80swk487IE1ZdN
pb1YYqC5JNOoxbgSJPz10Hml7Uz0kHvXeO5UCbojv84ydpqBhF8nSi7E05AO
3tgTH8JAGyweV+MwXti02Tzy5Wc6+jj2fHJ/IRX9p6cvVvuFjiz8HY087akY
35ckN61ioDznVwbznylI/36/8PkOOkqq/K+f+6cYSdVp72yZpKN/nXGdJVCM
Vv8gj1ZjfmqV3OL3tbQYNbbdHRO9w0B2ry55dE8Vod7nR5ffb2Mi8wvHR6Vy
ipCHyNz4YjMT/b0oxl+0nowG601rxSNZKErZ7OC0GglNdQTuuFzIQv4RuBXX
50TEPTSXbdLEQvqhlw2GU4nImaoo+JvKQs0LOt9rtYgI33uhXSyXhW4p/gi2
/68QKackKkdg+M0DW2XVvAtRz5Mx38yHLDTHOCU/c7oQfezX5t/+iIV4OiVa
vpKFaEuh3O+ZcBYSHNo6SFUloN37otSdzVmoJaOshfoXj6b+Wf3caMBCm6IT
P328gEcLFcrbHOxZKGXDap0j2NwXo7mpJsCPhfwcpmjC8jjU1bYoPZzPQs/e
JerxnhSg7xmeE29SWcjeOqJWLqAACQ2ed6qoZCE1yT3bPLG5uS1U5dr//8fF
4en29//MRxVTlzT6rdhImjcw1I3PR8dNCGY7Tdno7KcH1EnFfLSWOe4+eIiN
2gLvSW/tyENcteGCT2ZstG/uSPWOq3mo/01MUOhBNvpb6eBsPJ6LDPG/flQc
YyPHLQIeHTdz0T+hDyqfzdnoqUKsb51MLmq84CfIn8FG27ZppLqM5yCzw1qM
yVI2CglVEjPMz0EObwc6dPBslO04F4iu5KCNKs9MHYvZqJkkkK+1mI007vVm
dPixkXPyaoMkv2y0VtE6vTWSjYzV1r24Y5SNPtCP7yxyZyNCimjfnqEsJH8l
s1cgno1kJt3eD/JnodHm98dyPdlo1I7519owE8n/evst4CobvX3XWuGimYFM
HS0Un2qwkY5kojXpaToS7W9l7ZJjI7P4rUazE7fRySOPtY7NsVCfvP1O96Tb
iGfU41K+gOVDbXZqlvRtxNB4EufZy0IJVyRdZbvS0FhYmv7Dfhbyfn+PP+pQ
GhLP9zlbPM9CwwxZt+qiVKTCock9V2WjN47K0tEOqWjHta90aU02klLykFGa
S0FW7r7RHzF7Cvf4dTruTUGB3zz+0zVhI6OQxrA7a1JQh1PdG1EDNpq99WWz
uV8yGrS5M7XWho3+aFuFqYwloYD66mGrRjYaxBFWdZcnIo++yeVdH9mofP7H
bEBdArp1GzlU9bOR8i+BhGcJ8Wg989LU5x9s1Jq/LT7/TRyajtnd/haLT2ja
17rwvbGIA0ZFZRivn9HTp/HXxKAcif7J+mds1N6ha90jEIM2b1/vl7O3FIVL
7tlsYxKNutaqHfoQXopS9jEyCTcj0YnwvIqY7lJ0WEItKP1QJKJdmN3V9K0U
ZQk3EplBEejx29JZ8fVlqG5Nc5b31Qjk+99e6uSBMpQmeN72g204shd7fPLP
vjL0c7lpubY0DBUTqBvNd5Sh7GSNz5tyw5DUZ1srTaUyVOLVVrmBGIpO35/5
F76zDNFfHQuw4g9F9Y4jlUKYvp14GtlMKwTl3pDIHZcpQx31VcF4vhD00D/+
laZhGRr4TttqmhSE9jXNK1zbX4bmzQs9lPCBKEToav2Kdhly0Y0ovGAWiISH
TX52mpUh5duysyZ2/oicaT6e7V+GSFkbBKQT/RCRYSvlGFaG+qlPlr9f90VJ
I/b8ToQytO9rsXnarA/6tPxwooBdhtZ+fLPjwbwnsntsOn6SUYaeH2Gn0bs8
0PzFWppkdhlKX22yt5l5A9XfVFwsLS1DEUfCKFGD7mhzamc9f2EZUst5+fZa
oDtqPdD+Wz+uDCXLrRu5ePEact2hTVCJLUNPQ3VzM01d0Bfccx+l22XIcPLQ
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
     "], CompressedData["
1:eJwVVG00lVkURkX6wBBiRkMli1aNpPJRnkEIdUWlkgipSDQ3cytMdxpSRkMf
N6HUvOdO9Z73anWru5AiSpErKqV8VKNIISKhTO68/TjrrGet5+z97L2ffSzC
4wIiNdTU1Nbw59ttKY7x+/ehFK3bhnWNFSxOZd7b2POGIP6FDUoLWYzWFHQE
5RM4LH1aVZPAouP9pLj2CIIGZZ/LrmgWxFix9rEvgemsEevtQha/m399fmwX
wetq4YBWEotu+9ZZW/YQFCRPXqEhYVHg1OAmWEOw+3Lb3ttXWVTo7JeMcSNI
y5nr17WNRe4pg13qpgTv0qfargphcU7PaMI5JYNxOhkl1nz81KyTZxzvMJjf
n313JJnFd6O7312vY9BLigaYFBYWixIDbZ8wOChN6M36h8UyxfL5apYEeoMu
Kme+HhOtxeXXvAiGHveXrHvAolH4fanrBoIz4uy1wyoWzjfsHT8GEASFtpvk
LaZIb+xTefN6HoguisxSKBw/hkUKrQg2nRdMty6kcGoNK7sqIpierfHIoZTC
ylpW3sTjtRk6C19mUfjWFpwwTCE4vdMosvMIz6+NsmveQvB+quXD0XiKAyei
OImQoMN00TntrRRZe5WVgbEENfqNO0qWULw6WzmmM5kgU3+zvyyM4uaxHRMN
+H562tr6BP9CUd8vED86xtcza4Zvz28UcZayl0HVBGb2t1oGxRR/GWnGrS/m
9a95X1cRTtEh/Tuio5VgWKAsiVxJkfTqzyhBE0FCbUGiGZ9/yGioKfUdgWRu
iIUkn8KluDVsWTsBc1p0zKeeolKROLakmWCea9GTMQ0UARf3xsrbCBb7UZ/X
zRT7W5IfR7UQaDeNuvk9pVjlZTUYyccPjB+bHdJHYawomqSuJGgd+M+8VEVR
NWdF/x3KzztNO7mvh0KiP7U0KI8gPytFHjWPQ+JD+aWN8QTl+j7BXkEcDEUJ
GsfFBJ9XLvQIDudwwUtV9mMi7y/TyeE3t3Jo/uPQF93tBAfHhxpNW8+hR9Wj
yJhFcDSlMGIwjINnh4eFhy3BzfEfFHXBHFhRX7XvTAKbKR+3WdtxcCs2nd89
h+9/VXjbV2cOq326TIa8CVqGgqff0uPgILHKliwhSI/dHOKqycFOEmbV/DOB
46OWC6OfKKLctvqcsSOInmJODqlz2LdgON+I93fx9uL2OVM5lMuli7WdCDZY
CCPiLDjUxhvp1v/A+yVPfGBiF4Xf49XrO3sY/KRk9QQtFAbPvA00uxlI5ZaV
P9dQrFjwtvvCCwYDtTanH/L8QV2meaWKQZF3jNVMGw72VzQ9zr9k0FPSPTGS
12+rFeqreZmBWcqVOi1zDqbyJn3DHAYZKqUk/SPFhN6UjWWxDDx1D2gE8vPR
104cyYxkcF/lf/jcJA4r3e2Gv6YyMHIJcJrpwCFiKyPfeZaBsiQkLqKMw7Xz
1xyfRzFoqGccBho5ZCSNjgTw77sSdS7Zf+ZwPeZD9AkBg1tPOhc6qMmgSUnL
YS8+36Znjlvmy2DsP7uzYjMDrX1T7hv4y2BWaOJxNouBu3N0auAaGW5Mq38b
fIXfb7Xzm1zVZVCvGveW6WUgmi1MylVwGJMx+0G1gmAwr819lT8H63uTE8S5
Unibse7L+f0QHvXsPPlCCtmv4j3lbhR5OdLubzjmVNrubzj3U0zD8btS1K3z
vZ05g+II92z4FCtFfLbL/SIzCocv8tL0CimWV9XOW2pM8ca4PSetVgo9gaPI
T40idLTaJ/oRzx8x9FLy/9n/sT6dQA==
     "]}]}]], "Output",
 CellChangeTimes->{{3.701858180888438*^9, 3.701858191083205*^9}, 
   3.701858221321988*^9, 3.70185864410928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Bundesland of germany", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"Germany\"][EntityProperty[\"Country\", \
\"LandArea\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Germany\"", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "Entity" -> {CountryData, "Germany"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"land area\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Notebook$$25$856608`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Notebook$$25$856608`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {
    "error" -> "false", "id" -> "Result", "numsubpods" -> "1", "position" -> 
     "200", "primary" -> "true", "scanner" -> "Data", "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
                TagBox[
                 RowBox[{
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["348\[ThinSpace]672", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "348672"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                ZeroWidthTimes -> False], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"world rank\"", "\": \"", 
                    TagBox[
                    SuperscriptBox["63", "\"rd\""], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"63", "\"rd\""}]]]}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             LineIndent -> 0], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Result__Show non-metric"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Land:CountryData", "numsubpods" -> 
     "1", "position" -> "300", "scanner" -> "Data", "title" -> 
     "Land area properties"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Country\", \"Germany\"], \
{EntityProperty[\"Country\", \"ArableLandArea\"], EntityProperty[\"Country\", \
\"CropsLandArea\"], EntityProperty[\"Country\", \"IrrigatedLandArea\"], \
EntityProperty[\"Country\", \"LandArea\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"annual\[Hyphen]crop land area\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Notebook$$25$856608`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["118\[ThinSpace]340", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "118340"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"perennial-crop land area\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Notebook$$25$856608`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2092", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "2092"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"irrigated land area\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Notebook$$25$856608`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4850", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "4850"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"land area\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Notebook$$25$856608`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["348\[ThinSpace]672", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "348672"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "Land:CountryData__More"}, {}], 
       
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Land:CountryData__Show non-metric"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "UnitConversion", "numsubpods" -> "3", 
     "position" -> "400", "scanner" -> "Unit", "title" -> 
     "Unit conversions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox[
                    RowBox[{"3.487", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "11"]}], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3.487", "\[Times]", 
                    SuperscriptBox["10", "11"]}]], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                 Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"square meters\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Helvetica", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["134\[ThinSpace]623", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "134623"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"mi\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                 Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"square miles\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Helvetica", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox[
                    RowBox[{"3.753", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "12"]}], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3.753", "\[Times]", 
                    SuperscriptBox["10", "12"]}]], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"ft\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                 Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"square feet\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Helvetica", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod5$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ComparisonAsArea", "numsubpods" -> 
     "3", "position" -> "500", "scanner" -> "Unit", "title" -> 
     "Comparisons as area"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               StyleBox["\"( \"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], 
               
               TemplateBox[{"\"\"", "0", "\".\"", "0", "1", "2"}, 
                "RowDefault"], 
               StyleBox[
                
                TemplateBox[{
                 "\" \[TildeTilde] \"", "\"1\"", "\"/\"", "85", "\" ) \""}, 
                 "RowDefault"], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"land area ruled by the Mongol Empire at its peak\"", 
                FontFamily -> "Helvetica", FontSize -> Smaller, StripOnInput -> 
                False], "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{"2.8", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "13"]}], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"2.8", "\[Times]", 
                    SuperscriptBox["10", "13"]}]], SyntaxForm -> CenterDot], 
                    TagBox[
                    RowBox[{"3.1", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "13"]}], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3.1", "\[Times]", 
                    SuperscriptBox["10", "13"]}]], SyntaxForm -> CenterDot], 
                    RowBox[{
                    TagBox[
                    RowBox[{"2.8", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "13"]}], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"2.8", "\[Times]", 
                    SuperscriptBox["10", "13"]}]], SyntaxForm -> CenterDot], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox[
                    RowBox[{"3.1", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "13"]}], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3.1", "\[Times]", 
                    SuperscriptBox["10", "13"]}]], SyntaxForm -> 
                    CenterDot]}]}, "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               StyleBox["\"( \"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], 
               
               TemplateBox[{"\"\"", "0", "\".\"", "0", "2", "5"}, 
                "RowDefault"], 
               StyleBox[
                
                TemplateBox[{
                 "\" \[TildeTilde] \"", "\"1\"", "\"/\"", "40", "\" ) \""}, 
                 "RowDefault"], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"total area of arable land on Earth\"", FontFamily -> 
                "Helvetica", FontSize -> Smaller, StripOnInput -> False], 
               "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.4", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "13"]}], 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.4", "\[Times]", 
                    SuperscriptBox["10", "13"]}]], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "6", "3"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"total area of France\"", FontFamily -> "Helvetica", 
                FontSize -> Smaller, StripOnInput -> False], "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["551\[ThinSpace]500", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "551500"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\[MediumSpace]\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "CorrespondingQuantity", "numsubpods" -> 
     "3", "position" -> "600", "scanner" -> "Unit", "title" -> 
     "Corresponding quantities"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Radius ", 
                    Cell[
                    BoxData[
                    FormBox["r", TraditionalForm]]], " of a circle from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"A", "\[LongEqual]", 
                    RowBox[{"\[Pi]", "\[InvisibleSpace]", 
                    SuperscriptBox["r", "2"]}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Radius ", 
                    Notebook$$25$856608`CalculateSymbol["r"], 
                    " of a circle from ", 
                    Notebook$$25$856608`InlineForm["A \[LongEqual] Pi r^2"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["333", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "333"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilometers\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["207", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "207"]], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"miles\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Radius ", 
                    Cell[
                    BoxData[
                    FormBox["r", TraditionalForm]]], " of a sphere from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"A", "\[LongEqual]", 
                    RowBox[{
                    TagBox["4", HoldForm], "\[InvisibleSpace]", "\[Pi]", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["r", "2"]}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Radius ", 
                    Notebook$$25$856608`CalculateSymbol["r"], 
                    " of a sphere from ", 
                    Notebook$$25$856608`InlineForm["A \[LongEqual] 4Pi r^2"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["167", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "167"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox["\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilometers\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["104", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "104"]], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"miles\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Edge length ", 
                    Cell[
                    BoxData[
                    FormBox["a", TraditionalForm]]], " of a square from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"A", "\[LongEqual]", 
                    SuperscriptBox["a", "2"]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Edge length ", 
                    Notebook$$25$856608`CalculateSymbol["a"], 
                    " of a square from ", 
                    Notebook$$25$856608`InlineForm["A \[LongEqual] a^2"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["590", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "590"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilometers\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["367", 
                    Notebook$$25$856608`TagBoxWrapper[
                    "StringBoxes" -> "367"]], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"miles\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Notebook$$25$856608`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "Land of germany", "score" -> "0.4769591836734694", "level" -> 
        "medium"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "6", "datatypes" -> 
     "Country", "timedout" -> "", "timedoutpods" -> "", "timing" -> "4.363", 
     "parsetiming" -> "0.38", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa68871d7b2hcf0e9aab7h00004hd9772e636ge73b5373545821562961511", "id" -> 
     "MSPa68881d7b2hcf0e9aab7h00004156b663e60a3603", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "58", "related" -> "", 
     "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "Country", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.624", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www4f.wolframalpha.com", "server" -> "54", 
     "related" -> "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2017, 4, 22, 15, 42, 40.776833`8.362988470804398}, "Line" -> 6,
     "SessionID" -> 30216193998262937709}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36}, 
   Typeset`chosen$$ = {"Result", "Result", 1, 1, "Content"}, Typeset`open$$ = 
   False, Typeset`newq$$ = "Bundesland of germany"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
         Typeset`pod36$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{217., {61., 24.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
          Typeset`pod36$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa68871d7b2hcf0e9aab7h00004hd9772e636ge73b5373545821562961511", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     StyleBox[
      TemplateBox[{StyleBox[
         StyleBox[
          RowBox[{
            RowBox[{"348\[ThinSpace]672", "\[NoBreak]", 
              StyleBox[
               RowBox[{}], FontFamily -> "Helvetica", FontSize -> Smaller], 
              "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
              StyleBox[
               SuperscriptBox["\"km\"", "2"], FontFamily -> "Helvetica", 
               FontSize -> Smaller]}], "  ", 
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", "\"square kilometers\"", 
               "\[NoBreak]", "\")\""}], {
             FontFamily -> "Helvetica", FontSize -> Smaller, 
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}, StripOnInput -> False]}], "Unit"], 
         LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
         ZeroWidthTimes -> False],"\"  \"",StyleBox[
         RowBox[{"\"(\"", "\[NoBreak]", 
           TemplateBox[{"\"world rank\"", "\": \"", 
             SuperscriptBox["63", "\"rd\""]}, "RowDefault"], "\[NoBreak]", 
           "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
          GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
          LineIndent -> 0}, StripOnInput -> False]},
       "RowDefault"],
      LineIndent->0],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    ScriptLevel->0,
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{
    DefaultBaseStyle->{
     FontFamily -> "Times", 
      "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
        GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
        "GraphicsAxes"], $CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
      Directive[
       FontFamily -> "Times", FontSize -> 10, 
        "GraphicsTicks"], $CellContext`GraphicsBoxOptionsDefaultFrameStyle -> 
      Directive[
        GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
        "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
      Directive[FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"]}},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "Bundesland of germany", {{"Result", 1}, "Content"}]]], "Output",
 CellChangeTimes->{3.701857365031066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Saarland\>\"", ",", " ", "\"\<Germany\>\""}], "}"}], ",", 
   " ", "\"\<Coordinates\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.701857381402257*^9, 3.701857396546023*^9}}],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notent",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"{\\\\\\\\\\\\\\\"Saarland\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Germany\\\\\\\\\\\\\\\"}\\\\\\\"\\\"}]\\) is not a known \
entity, class, or tag for \\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[] for a list of entities.\"",2,7,18,
   30216193998262937709,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.701857400712248*^9}],

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Saarland\"\>", ",", "\<\"Germany\"\>"}], "}"}], 
   ",", "\<\"Coordinates\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.701857400712912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sl", " ", "=", " ", 
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<AdministrativeDivision\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Saarland\>\"", ",", "\"\<Germany\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.701857424539672*^9, 3.7018574269667788`*^9}, {
  3.70185746697477*^9, 3.701857477014728*^9}, {3.701857716611313*^9, 
  3.701857748509486*^9}, {3.7018578932936907`*^9, 3.7018578960211563`*^9}}],

Cell[BoxData[
 TemplateBox[{"\"Saarland, Germany\"",RowBox[{"Entity", "[", 
     RowBox[{"\"AdministrativeDivision\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"Saarland\"", ",", "\"Germany\""}], "}"}]}], "]"}],
   "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Saarland\\\", \\\"Germany\\\
\"}]\"","\"administrative division\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.701857719481118*^9, 3.7018577494876957`*^9, 
  3.7018578969919643`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<Country\>\"", ",", " ", "\"\<Germany\>\""}], "]"}], "[", 
  "\"\<Coordinates\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.701857754403723*^9, 3.701857767693625*^9}}],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownProperty\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Country\"\>", ",", "\<\"Coordinates\"\>"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.7018577629206257`*^9, 3.701857769152032*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<AdministrativeDivision\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Saarland\>\"", ",", "\"\<Germany\>\""}], "}"}]}], "]"}], 
   ",", " ", "\"\<Coordinates\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7018577853739977`*^9, 3.7018577932571783`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notent",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"\
AdministrativeDivision\\\\\\\\\\\\\\\", {\\\\\\\\\\\\\\\"Saarland\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"Germany\\\\\\\\\\\\\\\"}]\\\\\\\"\\\"}]\\) is not a \
known entity, class, or tag for \\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). \
Use \\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[] for a list of entities.\"",2,
   15,19,30216193998262937709,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.701857794011938*^9}],

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{
   TemplateBox[{"\"Saarland, Germany\"",RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Saarland\"", ",", "\"Germany\""}], "}"}]}], "]"}],
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Saarland\\\", \\\"Germany\
\\\"}]\"","\"administrative division\""},
    "Entity"], ",", "\<\"Coordinates\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.7018577940136757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slPol", " ", "=", " ", 
  RowBox[{"EntityValue", "[", 
   RowBox[{"sl", ",", " ", "\"\<Polygon\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7018578994414997`*^9, 3.701857909549066*^9}, {
  3.701858034948586*^9, 3.701858109500297*^9}, {3.701858276876083*^9, 
  3.701858280196104*^9}}],

Cell[BoxData[
 RowBox[{"Polygon", "[", 
  InterpretationBox[
   RowBox[{
    TagBox["GeoPosition",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PanelBox[
      PaneSelectorBox[{False->GridBox[{
         {
          GraphicsBox[
           {RGBColor[0, 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666]], AbsolutePointSize[
            2.053959590644373], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPX8ab7ZWtpTD7EWpYgsPeThkJGc+cFeVcdi1fzUv
y2UPh06mHIeWGzIOP+v3mIae9HB41SPO7Swi63D4pJ7DxNMeDuZTcx/wucg6
5H+LCs7a6+FwneuQaACHrIOTV8AE4x0eDheXSnYvWyzrsNl6rQjTBg+H1Qvz
FhzolnWIejy9b8pSDweBiYe+aujIOkyVS5edPx/B55dyv/Kr38Nh0cvMAwqe
Mg4O3pMNKiZ6OPSni5zWtZVxyP0+9/O6aR4Ouy+kO+zdKe1w+soXoeS5Hg4m
ToLdEmnSDkZ7zqUsmePhoHhg91TVKGmHK/fKXT9M9XBoW8//uveXFJz/Zl6y
w7dZUnD3VExKanAJlnKQX3Hif+dqDwdY+DRxJe5oWefhoN3Fs7pCWQruv+zS
raK/V0vC/S+bG++gXyPpYHeU7/ub3R4OXK85vW0KJB2yCiV3KR9EyKPzTXZ3
H4k/jFCPzj97eWOR3BGE+umyKrVRxzwcDN9vMVXqwOSf8Cu4ef24hwMA34/H
EA==
             "]]},
           
           ImageSize->{{
             2 Dynamic[(5. CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification], 
                ImageSizeCache -> {94., {1., 9.}}]}, 
             
             Dynamic[(5. CurrentValue["FontCapHeight"])/AbsoluteCurrentValue[
              Magnification], ImageSizeCache -> {94., {1., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Number of points: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["30",
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Dimensions: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               RowBox[{"{", 
                RowBox[{"1", ",", "30"}], "}"}],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Lat bounds: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               RowBox[{"{", 
                RowBox[{"49.1231`", ",", "49.64681900000011`"}], "}"}],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Lon bounds: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               RowBox[{"{", 
                RowBox[{"6.35944`", ",", "7.409650000000056`"}], "}"}],
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
         {
          GraphicsBox[
           {RGBColor[0, 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666]], AbsolutePointSize[
            2.053959590644373], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPX8ab7ZWtpTD7EWpYgsPeThkJGc+cFeVcdi1fzUv
y2UPh06mHIeWGzIOP+v3mIae9HB41SPO7Swi63D4pJ7DxNMeDuZTcx/wucg6
5H+LCs7a6+FwneuQaACHrIOTV8AE4x0eDheXSnYvWyzrsNl6rQjTBg+H1Qvz
FhzolnWIejy9b8pSDweBiYe+aujIOkyVS5edPx/B55dyv/Kr38Nh0cvMAwqe
Mg4O3pMNKiZ6OPSni5zWtZVxyP0+9/O6aR4Ouy+kO+zdKe1w+soXoeS5Hg4m
ToLdEmnSDkZ7zqUsmePhoHhg91TVKGmHK/fKXT9M9XBoW8//uveXFJz/Zl6y
w7dZUnD3VExKanAJlnKQX3Hif+dqDwdY+DRxJe5oWefhoN3Fs7pCWQruv+zS
raK/V0vC/S+bG++gXyPpYHeU7/ub3R4OXK85vW0KJB2yCiV3KR9EyKPzTXZ3
H4k/jFCPzj97eWOR3BGE+umyKrVRxzwcDN9vMVXqwOSf8Cu4ef24hwMA34/H
EA==
             "]]},
           
           ImageSize->{{
             2 Dynamic[(5. CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification], 
                ImageSizeCache -> {94., {1., 9.}}]}, 
             
             Dynamic[(5. CurrentValue["FontCapHeight"])/AbsoluteCurrentValue[
              Magnification], ImageSizeCache -> {94., {1., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Number of points: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["30",
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Dimensions: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               RowBox[{"{", 
                RowBox[{"1", ",", "30"}], "}"}],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Lat bounds: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               RowBox[{"{", 
                RowBox[{"49.1231`", ",", "49.64681900000011`"}], "}"}],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Lon bounds: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               RowBox[{"{", 
                RowBox[{"6.35944`", ",", "7.409650000000056`"}], "}"}],
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open$$],
       ImageSize->Automatic],
      BaselinePosition->Baseline],
     DynamicModuleValues:>{}], "]"}],
   GeoPosition[CompressedData["
1:eJxTTMoPSmVmYGBgBGI5IGYC4gYmDbdphzwcGP7NWhOYL+XgsZ3z+6lLHg4O
T+vaFynIODxQLQxzOQnkW245UXZPxmFF17Fb9097ODTc8XT5IS7rwPBo0mO/
vUD51ONuCnayDh1bCo9E7QDKl903tGGTdTBwZ1yUsAFovpWyV/ViWYcJ+Yl3
K5YC+QfXBCzplnVIOJWtWjIfqD796vMsbVmHuYJL9x7s93A4lTPB001P1uFh
lcg694keDpPWzazZ7CvjsKb7dgbDdA+HTW62LoutZRz2Bk1T7Jvr4fBuCt+1
/zulHfbzzTFeNMfDIfHBzu8FmdIO61WfNM+b6uGwa8G+VL9waYc9rEIi9tM8
HIT8uOO+fJVysOW6vrgA6J5QYZe77AukHDq+3L7euNrDYZ070GY/KYe0juTY
O+s8HBxT//zuyZZy2NnL9kEM6D+R07pr21SkHBb+MHy2Duh/BRXuGQfWSjoc
iFZw/Ljbw0Fn+xYpoXJJh4JzHZfuHQDat2DZtLWlkg5H+w3LdQ96OEyWlW6s
qJV0ALq+tPCwhwPfPoOZWhWSDiDr3ID8le0ZJeyFkg6x/5x/vQXyLeuFuQQL
JB0WSOnfVTnm4WAf5NIWWoPg/3r7+oBls6TDtaO5Jg3HPRza+js0J7ZIOgAA
EgfOvw==
    "]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Output",
 CellChangeTimes->{{3.70185790297358*^9, 3.7018579099263763`*^9}, {
   3.701858036523181*^9, 3.701858110735382*^9}, 3.701858280529201*^9, 
   3.701858345075697*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"slPoly", " ", "=", " ", 
   RowBox[{
    RowBox[{"GeoGridPosition", "[", 
     RowBox[{
      RowBox[{"slPol", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<AzimuthalEquidistant\>\"", ",", "  ", 
        RowBox[{"\"\<Centering\>\"", "\[Rule]", " ", 
         RowBox[{"GeoPosition", "[", 
          RowBox[{"{", 
           RowBox[{"51.16", ",", " ", "10.45"}], "}"}], "]"}]}]}], "}"}]}], 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7018582819939737`*^9, 3.701858301499433*^9}, {
  3.701858387403397*^9, 3.7018583890511627`*^9}, {3.7018586120984507`*^9, 
  3.701858612394143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slOutline", " ", "=", " ", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{"Black", ",", " ", 
     RowBox[{"Line", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"slPoly", ",", " ", 
        RowBox[{"{", 
         RowBox[{"slPoly", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.701858311804641*^9, 3.701858327315548*^9}, {
  3.70185843389168*^9, 3.701858444826849*^9}, {3.70185851585063*^9, 
  3.701858540578738*^9}, {3.701858595602715*^9, 3.701858616890341*^9}}],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAADB6ST+ZGpr+IHovt2yacv9VHeNHf
xaO/zYltWZshmr9M5qHC5bqiv4vpaKyBjpu/4rjXzqtlor+0gIcHkzibv5IA
wyJmOaK/0MkvnZZFnb9c1svYPo6iv0KBipCY752/IiceWsivob/C70fHwB+f
vwMIx2lp2qG/uB+NpDlRoL8joRm6DGuiv0nRdAzWtqC/Wg2JorFyor+Ik0Gv
W8+hv9PrdECOuaO/2YUEJLmlob/7TLSMT8+jv+yHghhYPqG/91pA4faGpL/s
dca8gcCgv+FodEYq/aS/8iG8glTLoL+YIsNBpR2lv/NjRU1LR6G/G0fGoyWr
pb9UFq3PFDWhv7DXpwjCGqa/kcbUp3cfoL8nHb8TaoymvwQqzF30WZ+/Tx/k
sXxepr+xHmEXq+aevx1RCQ0Qvaa/LaAya1WSnb9bb6R0/2Onv/VlG48iuJy/
P2zN7/S0p78lSzjdme2cv7DueoQpsqe/Jge6R289nL9h+3bLkqanvxSD/B62
M5y/yLBJhgusp7+5fZXf+eGbv51d0xGLtqe/NmxvqMbmm79CSBVjTLenvxnC
EbVQz5u/swPg5F+jp78c7MAIN4KbvzASKjhmmae/iJHgOFCDm7/S1mLaIpan
v9Dt6cQVU5u/DB6ST+ZGpr+IHovt2yacv4sREW0=
    "]]}]], "Output",
 CellChangeTimes->{{3.701858321929511*^9, 3.70185834909311*^9}, 
   3.701858391014613*^9, 3.70185843553769*^9, {3.7018585347614393`*^9, 
   3.701858541739945*^9}, 3.701858617371521*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"slOutline", ",", " ", "gerOutline"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.701858403768165*^9, 3.701858415410918*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAADB6ST+ZGpr+IHovt2yacv9VHeNHf
xaO/zYltWZshmr9M5qHC5bqiv4vpaKyBjpu/4rjXzqtlor+0gIcHkzibv5IA
wyJmOaK/0MkvnZZFnb9c1svYPo6iv0KBipCY752/IiceWsivob/C70fHwB+f
vwMIx2lp2qG/uB+NpDlRoL8joRm6DGuiv0nRdAzWtqC/Wg2JorFyor+Ik0Gv
W8+hv9PrdECOuaO/2YUEJLmlob/7TLSMT8+jv+yHghhYPqG/91pA4faGpL/s
dca8gcCgv+FodEYq/aS/8iG8glTLoL+YIsNBpR2lv/NjRU1LR6G/G0fGoyWr
pb9UFq3PFDWhv7DXpwjCGqa/kcbUp3cfoL8nHb8TaoymvwQqzF30WZ+/Tx/k
sXxepr+xHmEXq+aevx1RCQ0Qvaa/LaAya1WSnb9bb6R0/2Onv/VlG48iuJy/
P2zN7/S0p78lSzjdme2cv7DueoQpsqe/Jge6R289nL9h+3bLkqanvxSD/B62
M5y/yLBJhgusp7+5fZXf+eGbv51d0xGLtqe/NmxvqMbmm79CSBVjTLenvxnC
EbVQz5u/swPg5F+jp78c7MAIN4KbvzASKjhmmae/iJHgOFCDm7/S1mLaIpan
v9Dt6cQVU5u/DB6ST+ZGpr+IHovt2yacv4sREW0=
     "]]}, 
   {GrayLevel[0], LineBox[{CompressedData["
1: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
YyPHLQIeHTdz0T+hDyqfzdnoqUKsb51MLmq84CfIn8FG27ZppLqM5yCzw1qM
yVI2CglVEjPMz0EObwc6dPBslO04F4iu5KCNKs9MHYvZqJkkkK+1mI007vVm
dPixkXPyaoMkv2y0VtE6vTWSjYzV1r24Y5SNPtCP7yxyZyNCimjfnqEsJH8l
s1cgno1kJt3eD/JnodHm98dyPdlo1I7519owE8n/evst4CobvX3XWuGimYFM
HS0Un2qwkY5kojXpaToS7W9l7ZJjI7P4rUazE7fRySOPtY7NsVCfvP1O96Tb
iGfU41K+gOVDbXZqlvRtxNB4EufZy0IJVyRdZbvS0FhYmv7Dfhbyfn+PP+pQ
GhLP9zlbPM9CwwxZt+qiVKTCock9V2WjN47K0tEOqWjHta90aU02klLykFGa
S0FW7r7RHzF7Cvf4dTruTUGB3zz+0zVhI6OQxrA7a1JQh1PdG1EDNpq99WWz
uV8yGrS5M7XWho3+aFuFqYwloYD66mGrRjYaxBFWdZcnIo++yeVdH9mofP7H
bEBdArp1GzlU9bOR8i+BhGcJ8Wg989LU5x9s1Jq/LT7/TRyajtnd/haLT2ja
17rwvbGIA0ZFZRivn9HTp/HXxKAcif7J+mds1N6ha90jEIM2b1/vl7O3FIVL
7tlsYxKNutaqHfoQXopS9jEyCTcj0YnwvIqY7lJ0WEItKP1QJKJdmN3V9K0U
ZQk3EplBEejx29JZ8fVlqG5Nc5b31Qjk+99e6uSBMpQmeN72g204shd7fPLP
vjL0c7lpubY0DBUTqBvNd5Sh7GSNz5tyw5DUZ1srTaUyVOLVVrmBGIpO35/5
F76zDNFfHQuw4g9F9Y4jlUKYvp14GtlMKwTl3pDIHZcpQx31VcF4vhD00D/+
laZhGRr4TttqmhSE9jXNK1zbX4bmzQs9lPCBKEToav2Kdhly0Y0ovGAWiISH
TX52mpUh5duysyZ2/oicaT6e7V+GSFkbBKQT/RCRYSvlGFaG+qlPlr9f90VJ
I/b8ToQytO9rsXnarA/6tPxwooBdhtZ+fLPjwbwnsntsOn6SUYaeH2Gn0bs8
0PzFWppkdhlKX22yt5l5A9XfVFwsLS1DEUfCKFGD7mhzamc9f2EZUst5+fZa
oDtqPdD+Wz+uDCXLrRu5ePEact2hTVCJLUNPQ3VzM01d0Bfccx+l22XIcPLQ
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
      "], CompressedData["
1:eJwVVG00lVkURkX6wBBiRkMli1aNpPJRnkEIdUWlkgipSDQ3cytMdxpSRkMf
N6HUvOdO9Z73anWru5AiSpErKqV8VKNIISKhTO68/TjrrGet5+z97L2ffSzC
4wIiNdTU1Nbw59ttKY7x+/ehFK3bhnWNFSxOZd7b2POGIP6FDUoLWYzWFHQE
5RM4LH1aVZPAouP9pLj2CIIGZZ/LrmgWxFix9rEvgemsEevtQha/m399fmwX
wetq4YBWEotu+9ZZW/YQFCRPXqEhYVHg1OAmWEOw+3Lb3ttXWVTo7JeMcSNI
y5nr17WNRe4pg13qpgTv0qfargphcU7PaMI5JYNxOhkl1nz81KyTZxzvMJjf
n313JJnFd6O7312vY9BLigaYFBYWixIDbZ8wOChN6M36h8UyxfL5apYEeoMu
Kme+HhOtxeXXvAiGHveXrHvAolH4fanrBoIz4uy1wyoWzjfsHT8GEASFtpvk
LaZIb+xTefN6HoguisxSKBw/hkUKrQg2nRdMty6kcGoNK7sqIpierfHIoZTC
ylpW3sTjtRk6C19mUfjWFpwwTCE4vdMosvMIz6+NsmveQvB+quXD0XiKAyei
OImQoMN00TntrRRZe5WVgbEENfqNO0qWULw6WzmmM5kgU3+zvyyM4uaxHRMN
+H562tr6BP9CUd8vED86xtcza4Zvz28UcZayl0HVBGb2t1oGxRR/GWnGrS/m
9a95X1cRTtEh/Tuio5VgWKAsiVxJkfTqzyhBE0FCbUGiGZ9/yGioKfUdgWRu
iIUkn8KluDVsWTsBc1p0zKeeolKROLakmWCea9GTMQ0UARf3xsrbCBb7UZ/X
zRT7W5IfR7UQaDeNuvk9pVjlZTUYyccPjB+bHdJHYawomqSuJGgd+M+8VEVR
NWdF/x3KzztNO7mvh0KiP7U0KI8gPytFHjWPQ+JD+aWN8QTl+j7BXkEcDEUJ
GsfFBJ9XLvQIDudwwUtV9mMi7y/TyeE3t3Jo/uPQF93tBAfHhxpNW8+hR9Wj
yJhFcDSlMGIwjINnh4eFhy3BzfEfFHXBHFhRX7XvTAKbKR+3WdtxcCs2nd89
h+9/VXjbV2cOq326TIa8CVqGgqff0uPgILHKliwhSI/dHOKqycFOEmbV/DOB
46OWC6OfKKLctvqcsSOInmJODqlz2LdgON+I93fx9uL2OVM5lMuli7WdCDZY
CCPiLDjUxhvp1v/A+yVPfGBiF4Xf49XrO3sY/KRk9QQtFAbPvA00uxlI5ZaV
P9dQrFjwtvvCCwYDtTanH/L8QV2meaWKQZF3jNVMGw72VzQ9zr9k0FPSPTGS
12+rFeqreZmBWcqVOi1zDqbyJn3DHAYZKqUk/SPFhN6UjWWxDDx1D2gE8vPR
104cyYxkcF/lf/jcJA4r3e2Gv6YyMHIJcJrpwCFiKyPfeZaBsiQkLqKMw7Xz
1xyfRzFoqGccBho5ZCSNjgTw77sSdS7Zf+ZwPeZD9AkBg1tPOhc6qMmgSUnL
YS8+36Znjlvmy2DsP7uzYjMDrX1T7hv4y2BWaOJxNouBu3N0auAaGW5Mq38b
fIXfb7Xzm1zVZVCvGveW6WUgmi1MylVwGJMx+0G1gmAwr819lT8H63uTE8S5
Unibse7L+f0QHvXsPPlCCtmv4j3lbhR5OdLubzjmVNrubzj3U0zD8btS1K3z
vZ05g+II92z4FCtFfLbL/SIzCocv8tL0CimWV9XOW2pM8ca4PSetVgo9gaPI
T40idLTaJ/oRzx8x9FLy/9n/sT6dQA==
      "]}]}}]], "Output",
 CellChangeTimes->{
  3.70185841617067*^9, {3.701858631317383*^9, 3.701858647952132*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<AdministrativeDivision\>\"", ",", " ", "\"\<Germany\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.701858723845481*^9, 3.7018587591854687`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityList","noent",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\
\"Germany\\\\\\\"\\\"}], \\\"}\\\"}]\\) is not an entity.\"",2,55,20,
   30216193998262937709,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.701858759633504*^9}],

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"{", 
   RowBox[{"\<\"AdministrativeDivision\"\>", ",", "\<\"Germany\"\>"}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.701858739498041*^9, 3.701858759641852*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityClass", "[", 
  RowBox[{"\"\<AdministrativeDivision\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Country\>\"", " ", "\[Rule]", " ", "\"\<Germany\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7018587765362597`*^9, 3.7018587946570807`*^9}, {
  3.701858904001174*^9, 3.701858909032693*^9}}],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
   TemplateBox[{
    TemplateBox[{"\"administrative divisions\""}, 
      "GeneralizedEntityClassBase"],TagBox[
      GridBox[{{
         TemplateBox[{"\"Country\"", 
           StyleBox["\":\"", "GeneralizedEntityInfoItem"], "\"Germany\""}, 
          "GeneralizedEntityInfoRow"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "GeneralizedEntityInfoGrid", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
     Dynamic[EntityFramework`Formatting`Private`open],
     "\"EntityClass[\\\"AdministrativeDivision\\\", {\\\"Country\\\" -> \
\\\"Germany\\\"}]\""},
    "GeneralizedEntityToggle"]],
  EntityClass["AdministrativeDivision", {"Country" -> "Germany"}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.70185879644878*^9, 3.701858910260851*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"blList", " ", "=", " ", 
   RowBox[{
    RowBox[{"EntityList", "[", 
     RowBox[{"EntityClass", "[", 
      RowBox[{"\"\<AdministrativeDivision\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Country\>\"", " ", "\[Rule]", " ", "\"\<Germany\>\""}], 
        "}"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "16"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blList", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"blList", ",", " ", 
       RowBox[{"{", 
        RowBox[{"4", ",", " ", "8", ",", " ", "4"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", "9", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blPolList", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EntityValue", "[", 
       RowBox[{"#", ",", " ", "\"\<Polygon\>\""}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", "blList"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coordList", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"GeoGridPosition", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<AzimuthalEquidistant\>\"", ",", "  ", 
          RowBox[{"\"\<Centering\>\"", "\[Rule]", " ", 
           RowBox[{"GeoPosition", "[", 
            RowBox[{"{", 
             RowBox[{"51.16", ",", " ", "10.45"}], "}"}], "]"}]}]}], "}"}]}], 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], " ", "&"}], " ", "/@", " ",
     "blPolList"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outList", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Graphics", "[", " ", 
      RowBox[{"{", " ", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"{", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], "]"}]}], " ", 
       "}"}], " ", "]"}], "&"}], " ", "/@", " ", "coordList"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7018587993046494`*^9, 3.7018588031449327`*^9}, {
  3.70185898686452*^9, 3.701859197071334*^9}, {3.701859926276189*^9, 
  3.701859935324052*^9}, {3.7018599723959*^9, 3.701860035147571*^9}, {
  3.701860190931123*^9, 3.701860226090392*^9}, {3.70186030220991*^9, 
  3.701860320433982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"outList", ",", " ", "gerOutline"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.701860040301222*^9, 3.701860044842843*^9}, {
  3.701860239666326*^9, 3.7018602569458942`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], LineBox[CompressedData["
1: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
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1:eJxlmHk01V3UxylzqYgkpYREIT3RQ3FSMqXILFLmMmWepwzXnJl73cl1uYa4
96cyRNkyVKaURB6lolKGJJnK8N733/f966zv2nvtddben7P3OUfK8ZapyyYO
Dg5HTg6O/11fYG6Cr1ciQVQhXk3kAAuaGQONc87BEHoS1xNsyoIsIaqJe2wA
fKZfEctdY8KPhXO7Th7xA0OPEsOAIBZYSy3sPLzkDbPS8e0sSRZ8974m337N
Dww+tD83k2SCssf+gZOO3vC67UDy4ttqEKOk0cMGfcHN+6LzvEM1/NmiaRZo
4wUbXr68XMZ3Yd5ZlsXTEARWtwaWS7rLoTQrYdfRNH9YVXYgnxArh8q3iury
36zhq2PT4npMGaRQJgw6JK/DQumjyJjxUrDwVOf/q3MZPjVwZWlcYUBri8CM
SI8OIvc+s08RYsDjUezn7aeqYJ9gt6Z3sRQ2Bo2jNuHkkRAX/+7g/+hgWf++
tUbKBIzl9TtJfHSoNXFT6njqAK+aaNeZc8XwRFmA0CTtCoSnl3EOnsWg7jln
sue6AzAKTv5h8RSD5buMi2ktXsClXy/YH0uD+K2FeXmfveFkVcPgAhcN+oMd
q5ReuAP1yjAjvbcIxOUP/bLdcwvi7ycttI1S4VjjmWDym5tQuuGteI9ABU9/
Tg4pOR/gKa4gjLMoUNX1eri/1wt+h+XrETLJYOjSvOFZ4As4uz0W276TwLzq
xfCJ3iCIPo3P6JaggKtW379DsSEw6e/39qcKCQgbXwNeLUaA522s4WoTCfxq
rIN5nMMgybi7e7GJCA69vgdbH0TCRb2wle8kAtBF74a0n40FQg/ndIN1Ifzz
7cYuRYtYMLTg/3M/DA92g/xJd8/GQ7qwjW0YGQ+9CpVnX2rGA/dmXv15PQJk
v+9JOIElACMohOMv27++3jJWaVMK/Blvu5DZiYc4y9njV0STYcb+Io/XFAG4
3eoPTtASYap0pfdSDwEcw1edp8cS4RH9FOnEWiE8yQrmLBfJALtjXqqqW0iw
46QDj/CnDNjNipmxKiWCQsHeXHuzDBBbTLj3V6gQNsdPyITWp4O13ZmOU3IE
EHMOr1d4dgcucOX+KzyOB42vI0MDe+5AY8PVPV0aeCiqJedf5M8A/9XtB/0v
4CF599yGKE8G7G1yXcm/VgDP+aXfBitmwpfLzFZz4wKY3Soo4nkhE17//hVL
as4Fx+/rygqdGXChRrFtrCoX7h04EsV5LxOe6rscnm3NAfHpMza7TmWCsHov
IT87G0I7QjaKr6ZD9ONL9WSuHAjLNLCTbEsF1fOrgsrzWXC/fWR5NScJEp/c
CiXoZYM/tU1rsCQRFAl69u/VcmD2/j1fJasE+L093+T9phxI/Wsir1CfAF9a
VVw6LTMh8lyb+ppgLOhZhvGnJmeCcUVEd6ZaLMT+VnSXfZwB9HOiIqf3xUC0
R6VRqc4d6BIePq3OGwPLx8UVKDEpsCabW7L3ehC8fye4G2+bAu/MPaa2MfwA
PCHixgYOhjXKiy21vcBrkCLieiYBtocHZz3YYwH9Q4+6DXoTYXhZwP99gQ4Y
7owS0XBLBb+nTlpOjnboRmvHyWdl6bCk6BjsWHIVHXXvTR1i5+lD30z52uoN
tL0pZ3utXBZs+6PnlsLljgQbktV8DTKBX5VfVS3JD4UFnb36QScTnsW1nia6
3EBTEq6rD7+lg4C466kIB19USZfRTI5JBYdlfB+OKxTtl3Wv/62UDnMDD1/M
aEWhZV2vcPUraRDhPXPAoygalW3xCPI/kAF/NO+bWl+ORf+GExUzxjKg5xXn
uuxyLPoWftKEaZgGbfxtB+vkYtFBfekU5uUkEMMmbGpuxCN+7GK4LwsHWWF5
+9t0cYhgOiv7fBIHX1VShCW5cWjfm9GsKqVkyF5flI3xSULJdbKBkrOp4PXa
wmy+PxP9ddDb6zWaDAGvktSYh7LQpmTCFpZTCmxPsiWdYOuAF3xCYVMpcG0+
WmooNAttHBSVXudLhXXCerFmUBbCdGIMMmLSQKr3yIu68iwkpKMe5qeRBo13
JfmoAtnI9F3fXp3HaeD55uTYLH82CiPprEUeTIfF9xFy49XZyKY3tEBXPB1i
j5GeaivnoM5M3jb+8nRoKxTMPq2Tg/KVHRcLf96B5bsnrq9h2Wj9tnFYyjT7
nF1Plzp6JwdNxnXQPrlmgtqBf2VObMpFXpEvCp5uZEKans2JgkO56OzWOY2t
KVlQmN+qcHApB0Uxmm22jmcB3+HhVtyWXFQ90SC0Ozob4o9p3lBqz0WiLdGs
voFs0HZfaUuYyEW9JB/fWZEcGOcr+6XVkIvcb71R/X01B3a+PSPz2i0PMUP6
OXKdc0Bi1PZmxN88ZCNFOUwQzYWdg5uya/rz0ZCTiza/RS5EZ+vt03uaj8Km
Oa+v5+ZCcO1ed3XvAvR+IlzLpIytI/eWdicWoNmjXIRTX3Nh1OJRU5x2AerJ
nHgmopAHwtZH9AyNCtDI/ugOxYg8wJHWk1UO4tHKiPLHczV5MB5PHmAp45GV
g5yCh1g+mHd5i38dKEC3WmQ/2wbnwyzn89uGpQWolbvFbEG/ABRr8uVumhQg
z/lfyzw2BZCkeiP9onkBkrmes1oqj4dxnOoFhbR8JNypYcHqY/fL2XXLGYEC
pIexhH6UE6CG6b0mw4NHdxXqyd9WCOA5FPe3mxuPqtvCCLFLhaC1v9tmKByP
AnteWVvsJkJSh/OfA9145EQ3sk3HkaDySLDUjRAC4haat05+RILEWM37yVEE
FGvWeVU8nQySnwPiaNYE9MzP6cxPBhnaz1RHTt4joEsJnvuToymgSTxlz/W+
EBEuv9gSzkcF2/oUevJRIgpfbGiVGKcCabduGVGbhIizOEqTUBF4Td1xEThD
QjpHdsTZvaDCStL3sjppMqLWbDlCZ/tv72zmcttDQYpTd2O09Itgy8m9pmuK
FFQ4G2WRXFoET19KLjmOUpC2se3K6+Ei4Br59Zg4REG67o5FZpw0OE3X6SoT
pyLunYTcVCEaXAtyR/JyVDTxo44nX4cGoZZ/qNgIFam0WlTbRNNgYSVfWnmK
imYuqES9rafB5Z3t1TcVitAXYjbr9BQNpHRx21pLitBCpJfcxDcapPMIVGkY
0RBH/XWxv1HFYM0Iw7ta0pDDV2GpwW10WBaNvFTkTUPVe5zCXkrSgf8IXV3J
mIYq/uXz2LeHDoFEr4d4Xxp68LKNVn2CDt3HtrnSP9FQs6p4d3QIHRz3+sT5
ztOQZs6gmMdJOqxOMHDCN4uRkf+BzwUqdHAz6vwYHlqMigMY6m3X6dAmmzj9
rbIYWXxRDteyZt9XomW6y4qL0R9D18AMXzoIN541bZopRh89PNx/z9Kh+IxD
4xMDOhrNMw0oGWXbK3gbGsPpiEbYOlV3qQTapRKDtEvpyHH/xKYXV0vgIK/E
6I4eOgq/PbTxbqQE5Dci3ob8pCMl36SnMuP/X2vhPxrXDdLR5o76PKuNEjiT
mLF8qYOO/uGWClnSL4VP6uH7BKvoiH65Z5u/TSnEbT/XdWGIjrzvqD3IiC0F
c/+beT1v6Ch0Z5x58a9SmGswPs/4QUef7fRD7LcxwPqZ6juFF3QU8qOiuy2Q
ARLfPlO/j9BRsGXqslcsA7il8dof8XQkFbHbIuU1A15usy5LzKAj16XLu/GP
GJCq8+CEdwIdPRKyWjv3nAEsV9p/r2Po6IBzXZ8zdxnUtKoy39rRUY16rJ7A
8TJoXLF09isoRpd+h6bE3mNAv5WhqcytYpRsLxB/pocBn0WFm3y2FCMxL6yR
msyAK8mVfZZsPSyQo7h+nwFMl8e3ib9oiGu+dvB2LwMC3QSlbpTT0Nep/t01
gwxYGxuzPdVJQ2dbHasaT5VB03ErciuVhkT31kg3tpeB6PgOc+46GtpKMMYv
bSmHBQFy3fEcGvoSmtcWF1cOfw8XDeJP0hBeYZjOPVYOarDnO662CAW/jCkq
OFsBSYcUw9vPFiGXPV1V9ecrQJtedskVT0GmksspDaUVEOxrxndxloyMHkSG
u2+tBO+HLU7zfSRkKeHj66hcCWtVM8bWTBLSKnpTputVCZuTV/aKCpNQhhKt
nllRCadGrA0MxonIjv+W54UPlZD87GTvIQoRLSr+J3GrrxKKpzLf1EYQESxl
vcD9qQQfjagE/B0iWncxyT2ldRdeD7mmPHhJQo8dv9s/6r8LY894xtQkyGjt
09UjMTZVULu8ZsofQkZBFpde37Grgv7e2gg7IhlJTpbH3kusAvmRBfnHL8jI
cFVR4lZMFXwxK7xkQKSg/R22ZoeNqsFOOlXgpSoF8bXJD3hCNeg/DFyxHCOj
syL3go9/qwZNsjtxnJeCgGl3g7hRDfZy+yZVCWS041PNsXAXJgglf/I8J0dB
28yP2yqlMmF4Yjl4MIXdj/i6UjLY+t2yQsvp5xTUMVA8d9WJCdsWaQeWVajo
zdnXb2SDmJDNs/aMcpeKduvv1+isZ8K5H8do50qoqLFhXoLrCxOOL4HGyBoV
4ZKHPxAVWfDkR+qkaDIV2YUoqoWEsOBvYOAFsyoqspQ5mE8vZYFGRBszwpyK
ND9rtl6pZkFQ6ydJ/xtUtAWX0dv0lgX5b/V1alOpyPb+WgffMAuKhiNbIv6l
ouYDz6vEtmFQE6VzWsiHitKztRq2yGCQ+vxkSGsAFWVknrK4qInB1joBcukq
BQ3Y0LgY1zCwnUxq3ZpBQZKbhY9o62JQSxd9czCLgnpFFLloZhhkRom77gig
oKDVnz0f2Nqo90BU2BMy4nRq3/RSC4Oh4/LF2q5k5KEtunN5PwaCvF9549ZJ
6NFWtxqGGAba/7Tlc0+SkNuz63XTHBgkhobx2l0hIQOF7/pGsyzg5v6e5i5J
QpleJbs1WlmgKeuR886EhDqH4/NwiSywU1ezNCglsfmTflrlw4I/gh+fti4Q
kTo++2CsCguQder9pQ9ENCt6TI9TlP2e1ft1xnIrCfGZxC9vFmBBaHVGS5Qo
CT1xFH2rP8mEr93GQbsHiOgls77CYjML0v4I8hbgiOjX+DNn4VEm7Msxvx38
i4DO35RWmmP7632R6pqhEVDdD5+dxez3Mml826OCXQTkank37oIhC7iU7GSa
n+KRXYDw1nhHdjwcKzHIEI9+DgZsuqTAgk/UFZu4hQL0s3iXlMoME2aXn8r+
+lKAmjcOjW20MOHlasXXoG0FSP/BhEH7ZybY6Jft8qPmowavQarNKyZIW7a+
7X+ah3T1g3gXN5hwckVBWaMkD9WZfFERZO/XeYeS3a0veejitO0f30QmcPAJ
iQvcy0MxhDEeH28mtHSvf1TzyUNpW1uOK99lwkhRGs2xJRe9PMQ7bdXHhOjw
QPfzhnlIVcl+X1swC3B8tgfEbPJQqPnFgA08C0xPT6lpqOWhuMsv9qWxeSxs
sPrnV1oOClc8rZuQx4LtnJ9lkrlzELbRQF5lsODAjxGJiLFsxLE4wMuXwIIR
E12yCl8WqsVnpNs+YcFgsNDboOVMJORfgSNOsWBgoWfx7+lMpNcv33VunAVL
kUvdChyZ6EPXudaoTnY83rEnN6+lI4EruofPfWRBfQTnfx6kNPQZJzqf38GC
1cT98Q35qWjag/+x5v/ydp976Xt9KhrYfPgOSR2DfYkuD1tNU1Fz3VsOXTbf
PNlT0vcbk1FlSor+lCkGsjviH04PJyLWw9kcLbY957X20fvVOPSP/Zvm5UA2
z+uaNKlLiQhjzfPIRbJ5L8ryy8tIRCdap4zu5WCg535qvCozAf1eU3JyTcdg
75AKNiiXgGZcFD8UUTFQMJg/Mukej7hrhTYzGBjUh4nQaTbxKEW88mBYFwaf
rKx54ufj0F3ZwsKU1xio7/Uf6myORSpupgEP2fqSq+/4QHIcCutv6Em6i8HN
H22PnM7GoeBCjw9dNAxOcWf9k7oUg2T9kIslC4M2bX+P5T/RiDhfXfKgFwM/
3YDE3NRQRIykvHnWh8GJcrPR79MhiKIxnoBrx+ClWXhndW4o8hc7fJn/HgZx
7/Zfy3sVhFxGz33MicfAaXix4Td/MArWsUf2fhjkO/g3Ny/6o/kaE5EKtq4L
nZORuxyAHjgIn1e0wsDeJLu0vDgIkQvfW86x84m+9s/WUwNRQsMxyStnMTge
NxoQPxmAygfNbQYUMZhLmZax2XcL9YG5opceBi5Phl9dpHiiBNPLI8tHMfBx
vuW418QNeR4WG+6VxWD9vz+PJ3tdkWOjSba1KAYlN+Uiy4QcEPPBvbCSnRjM
iL11Hflth8hivbidPBhwqLUZXY+xQE3pR/ecUcFgpWtzPN8ThETl48Y2yWFg
J+6hvm8TN2re8e5RoQgGd69qdm1xVEWtj/ljDSfZ/JvUMkrDj4DzvszCw3Ms
WNDuXgzbtKCVts2dRNyNgdoncb/mv/IQ0jfLtf8qBs8lw/rq56TA5k3o31U3
DN6rHn7B1SuNKpshjOsmBpWhLVYVpcfQBqdc76YyDBaePfh39tAhaC1qbJJp
wiDPSv6mOIcqxP8YP0YdwqA01MybP1cetm5WFNz/hc3Pdr7p7Rf0QPJK+/TH
bxiMtFS7nbUwB17VXG9l5RqQDho5/lXNBcjnQiZuOdTAMYHRT6q1HnDmIqmF
92oN0NK5HgtLeADHTg5xb70aWHan672yd4MAl5DTgSo1UFrq2vx6+gYUd2uW
XDtQA/L3ME1lORfoKOziFp3GYDDpe2cyxQUG+//epA5gsBT8PZZy3g0sc/Mb
vo1joC844CFl5A7uS+a2M2x+Szq0V8hbPMFYsWhwaI7Ns/YOsqOkDyx+l8iU
m8QgpSggwF3eF1LMDXL7NjCgVcxb36j1BQr+iwuuBwPOj7qaAQF+ELUn0OBx
Mzt/2oHOJSq+8D7vXPT2egwkG0bElb/6gNZZpx9/2fmcFAiPlHfwhetKFnbB
qRiMCr4Kc7Lxh7GueHtcNAZrIteVImj+MGfyfPqjC3seEv1qJcYCAddVHryH
XR9bp9+5J/YHQVeGlVX8ZQySsUZXeXIwTFgSZt6w552xb3+4lWQwjNNi6ans
eefz7DNSmQiGV/qxoxNKGDxWkdUczQoFA+OV874nMOj1ui9yKjQcxAEncUqK
Xe80GU+jwXC4+cBTME0Vg0LD+ENTEAUc7tIthpIYfAvrvWOqHgWPj33de2EH
Bv067WqqEVGQlF6sHPWFBbSF0/gqoxj41aaWTOhngTffGqfiQgwohlOchTdj
wMiajVTRvQ1N9dbTm5UxEMuYWXG6ngC7uo9UVB7B4P/+B/8PrIZ8ZA==
     "]]}, 
   {GrayLevel[0], 
    LineBox[{{0.0320833757631901, 0.027108234006741647`}, {
     0.03260708613991138, 0.02653484158061944}, {0.03249141928711926, 
     0.025627072117851944`}, {0.034117039904842474`, 0.024621297160719424`}, {
     0.033682226909411535`, 0.02357798601113941}, {0.0352315092369755, 
     0.023283778703766644`}, {0.03505212624514226, 0.022439005600557452`}, {
     0.03423246406068721, 0.0213240424785593}, {0.032212244883635804`, 
     0.022646588096184517`}, {0.0317711299558621, 0.021863092165190428`}, {
     0.028206230591862596`, 0.022262202406885975`}, {0.028960992512717543`, 
     0.024019067895712554`}, {0.02837542830762992, 0.024269787744065168`}, {
     0.02849110538664244, 0.025371289920297278`}, {0.0320833757631901, 
     0.027108234006741647`}}]}, 
   {GrayLevel[0], 
    LineBox[{{-0.020320608236094106`, 
     0.03645004873206125}, {-0.01663015761637315, 
     0.034686492713889516`}, {-0.01572999280614212, 
     0.03502303828261523}, {-0.015339389547455812`, 
     0.034506019306478966`}, {-0.01572543019061928, 
     0.03443676413402122}, {-0.015392950431750837`, 
     0.03313704375207984}, {-0.015904108729049772`, 
     0.03254520455401006}, {-0.018038631118312554`, 
     0.03297608037688427}, {-0.019088818037336714`, 
     0.03523787705743789}, {-0.020320608236094106`, 0.03645004873206125}}]}, 
   {GrayLevel[0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQfVm3kvf587T9nX/ObI5RXG6f/mx3st7/zP3LrM45
Wc1aZn9nkwKj+6Wk/akLaqZdll5mr6f56eszqcz91ZvPvUjPWmo//6X9pOWe
Yfs1N/MYrk5dYr/ScqZ4kUP6fo29G18Zii+x71wxVeTv3YL9ltppInnrl9jH
dtRt1gsv3r9QdvvUcx5L7BPmNa7coVe+X86YO3GR/RL7c7Keod2Ly/Zbcp0t
mNmzxP6A20ZjNfHK/bnt+U/yE5fYz11zf/0Og9r9IvP277ARWWrPV3M+7NL7
mv0rYzflhDcvtV/93yjX5Ebd/mjHOMGb3UvtD2yaZ3zCrna/p4f4iaPay+xb
d9/N12mo2v/5huTaG8eW2t86Z/UumLl8f7u/mOO1uGX26b7rhOZXFu/ft3eN
Z0nYMnv08AEAoYeZ9Q==
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1: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
/P8f/RdyU3cI
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1: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
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1: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
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAADB6ST+ZGpr+IHovt2yacv9VHeNHf
xaO/zYltWZshmr9M5qHC5bqiv4vpaKyBjpu/4rjXzqtlor+0gIcHkzibv5IA
wyJmOaK/0MkvnZZFnb9c1svYPo6iv0KBipCY752/IiceWsivob/C70fHwB+f
vwMIx2lp2qG/uB+NpDlRoL8joRm6DGuiv0nRdAzWtqC/Wg2JorFyor+Ik0Gv
W8+hv9PrdECOuaO/2YUEJLmlob/7TLSMT8+jv+yHghhYPqG/91pA4faGpL/s
dca8gcCgv+FodEYq/aS/8iG8glTLoL+YIsNBpR2lv/NjRU1LR6G/G0fGoyWr
pb9UFq3PFDWhv7DXpwjCGqa/kcbUp3cfoL8nHb8TaoymvwQqzF30WZ+/Tx/k
sXxepr+xHmEXq+aevx1RCQ0Qvaa/LaAya1WSnb9bb6R0/2Onv/VlG48iuJy/
P2zN7/S0p78lSzjdme2cv7DueoQpsqe/Jge6R289nL9h+3bLkqanvxSD/B62
M5y/yLBJhgusp7+5fZXf+eGbv51d0xGLtqe/NmxvqMbmm79CSBVjTLenvxnC
EbVQz5u/swPg5F+jp78c7MAIN4KbvzASKjhmmae/iJHgOFCDm7/S1mLaIpan
v9Dt6cQVU5u/DB6ST+ZGpr+IHovt2yacv4sREW0=
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1: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
hYY=
     "]]}, 
   {GrayLevel[0], LineBox[CompressedData["
1:eJxdlH041AcAxxV1oRzjKrUiZNoic2nlWl9K8jaV13nJ8nK485LK5Tgv03E4
ctzv6E7c3bY67Ta9HB4JXRIPkmmFUFsrqlEqrEeoTf/uj+/zfT7/fz/fDeFH
vOmLNTQ0XBfysemFKsHkjTzokoPmJ9vkaKWwxmN3FmF/hJG8X1eO+QtSrf3r
inDQYE0E10MGLvMUz/YAgc6Ob58P5EgRLJpyLysjIKjyJRXQKxF4TrCpUYOA
/PXyKw8nzoCh2VKymkPAJ0/eE8oox+M8l1ad60LoDwW2GwaUI36r15wiUwix
UXO+vFCMRTaykYgSEQbX3L/24eZpXNJyGv+tiYAwzFhb1UDANCN0PMlFhMge
5dOdVAIhz1+VdDAJHA5uPKagCjG7/uzU4YFSXCTq3DmWAtAiPe0jCTFKz1Pu
KPQFeMU8aK/qPAOl4+AeiqwQfsUWtGZlBVKMWFPr6Hx0j/wykT1RCWpIzbKr
Aj7GdjVT8hOksEz/x4VYkgNOVEG1arYCTaF3um+zT8LcZGqClFWOvZ7ubuNs
Lp5S080MZwnY9T9sfbwsAxXjTjaK90JYz2Uron84gVGyRr1nBYGEywOCzsIE
fNOlQ15FIUDO6FlBa4oBs9uxzrGNQPCxghlbY1+QbHK3DCQS4HfQe3Ji3BDp
tjbqQj0B1xrKxLRihdp/jmyyqFEEATdTZf7aUz2ks2h02F+EfDtSmfm2Q+r5
XbfODT8SISlp1RI7aph6mvHAymGpCJLUACNhV5zauK/TxKeSwBODhPMriWj1
/O7rfq7KEvxEHnRI82Wo9XdqVZWtKYbhFgOpojZQLdAbrfs7+xSWbo4PXrvv
OzWDf+RdU1AB7Edc41hDLur14Z7ZM3652FDVsJayzUudWrO4w32MB+3t7ZVN
CmdEfzbw646sbPgfLd8cyvPGhaC+vApSLpI8HX4/zo/EjV7JnliLHDQ98btp
5ZMIJx5PFWLNRsYLa50HrGPoMJWQVwceh97K15sp5hmobBWbWlJZiA8VMkeY
34N8b+zAzI9ROLfY3tzNIwvKJxu8yor98V7Tb7J9Nw+BEu8Wc8YCS9jNdnV5
GIqxVD6zCEfbKGc5TcbHJ4Vv5jjVIaiLS9NseVuAWk2qeOun4aA4X66wWdiL
U0ztbv60D56//ZzWG1YES1eqWbdBMrApopGlVwx3sbd/2gsWXi1hV2OsGGfS
tRMSg1KRvsnMfiahBDkX4xocZ9lIjV3VcOeUEOrcy5d6jdNwP5y7t8WQQHJf
s8cVTjIK+euC5Xql4O6b/DrsKAf0L5qt4+tL8a6IW+Vrw4LDTS2zftppROv3
3pWGsfHAaqmy6u5p1D6MDUjUZqFePrw9xUKCAxt7r78ZOwHTFZpxxMZyMEey
/mUkJeHnmGultn9KUGtYoqeYjIe7Vbo16emCFxrvP1h4xaKlLfneLZoUJskD
kf17WHipd9bbBFJ066YdysxJgarr9qP0YBkeVU/XiG+fxA76lx5aF6UQBpAm
Cjp5SLvq3PHyLxniV/4RVfOMh6+GZQEWKXL8/2/+A1dUGPA=
     "]]}, 
   {GrayLevel[0], 
    LineBox[{{0.00877789280695244, 0.05666031964600603}, {
     0.007938785419304921, 0.05846432115599264}, {0.006261536898719646, 
     0.05895252514001271}, {0.005700064012771051, 0.05807001549973653}, {
     0.0056777739271596985`, 0.05728965259565295}, {0.00641580294834408, 
     0.05743709684981258}, {0.006552034933492121, 0.05674362346729857}, {
     0.0073716486156785895`, 0.05660126520452863}, {0.00877789280695244, 
     0.05666031964600603}}]}, 
   {GrayLevel[0], LineBox[CompressedData["
1:eJxd1P0/EwgcwPG41M3lIZWUQq2luxeu9LKy5JvsPI6Th4WSNoxtRrNhHk4z
jJGz2WKu0yXJDslD6kR970WRylVqdSSKukpJXb3cknR3v/bD5/X+Dz5rmImB
Mfrz5s3z/6//rexW26zfnAy8faWcxxwxXLGpMLEIE4Cx+Wu7ZcQscJNKW/ba
iyDrpb3hcHISdN2scOeuy4PO8ZBLG4IOQGO4tuDnhfkgpFEGBIXREGt7r8E5
Oxfo/J/s9kkDIb1V/4rPhBQIW3sqO09SwYpJy9WF5MOa2nbLZWR/ZBcmvu8M
LwKnx17xyUMeWGL8pO15bjEssOPtsfSMRFOX+bVlK+Ww5NvFR0+eCcPZnb+H
eNUpoNpkkJIZzMYV2j7roEoljC9O0JgrY/Ede3gDZYEKKtJ3Ly29Go+zrtdq
7j9UgVC43MBxMwOHDPWe3KerQOa4sIxIjkD6BxNrvQ4VlOQcbCG+pmEGlx30
llgOnLsdM6vUwbhxff819bQaRHWMyaq+BBR+4TG4VaiCshG59YBBKjZLvksM
nFLBHS0z2/lRGur1U5NnqSroLdtw++/8TMw3yz815XsYIvrk4rYhMToyJOde
RisBKa1fq30kmDoTXKeTKsGvOeeqASkXC01vffL6vhTGKAfNL63Nw+NdI72+
iQpgCupramolGNrpiq3OcjgVGeHzY3UemjpvGjSjKSB70y/to6p8jB7e42zD
k4NI+2RlrbMMebdDgt4OyOEDw3MVb0SGpXPTJPGBApCdJSVbTRXhX5sKzawM
pLBaO6JocJChIv2wdbeHFCoCp0hXJqS4vOlpWHNcLhCa/DL4p6XYTehee9ZW
Amu9iIWNuwrw+i29OZJOAs8ytgQ0+hzCme2tgaG7JLA144h9yVgJZiZM2nCP
HYTar7gpApsSfHOn/Y9J1yzQefAynMMPIUOnviGdnwbWJM65dw7FaLiCtS2T
wYe66nXbZeIi7M3pcjkSEwcvLFmz7c+KkeBEcCIXJEF6ys6IUaocjWc8Ywvn
c8DoNxmZ7y3H0RuTmo+zcWDSoTRps1XgP/bMVOaJCLDj9Bfda5FjUk+UaxRz
L8R1Xd7SW1uMgzpDwYNyKvosyVpKiS1Ck4xUxZmVIThwr/Oad38+DlI0x+lu
POTdPbqUtSMPh4O5L4xPJiHGY2bcJymWv3VMy6nk46X9XdQocTa6CNvimbbp
OLsgdDldJMFp0nPWe0UKRjZ0GNw3FqGmf+OXz4R8lJ3IrtKrFKDwY2NAaXkK
Hsptjh+wSMBwv9Om+mQ+Divpcz1bEpCT+IpTHylAyfkgbQOTjee7Y4Sv/ZPw
1zBlRmZ1NMbVUVczSCwsbXqwyCeehf4t1f2eHzl4sd9dffthBPZyPG/17Y3D
czSRNWg9UTNNDXxjz0Nfi9NNhDYnnFthtN/tmxis/yFgp9ucJzrSbG82mEfh
2PjDZq7TDrgeLeqY8EtG02NRCgcHJkx4v3Inj6Ugc9HlGCNxIlRta6E1HOWj
pjiBrJkUQJR6aE1IKxs1hw3HFUECYNDnLnZUsPAGxtb3LEyFKrOzT63swpHg
0nBhfXcqDOnM0iJ3+6Gj27EUy8l0uDAYKh9N88ZybyLpz5gsOGPhLqxQMaF3
LMzIgpgJKsNRhmJ4P7CNH+0Y5orB5M5EgO44C2r0nYjevtnw+c/+BdyCZFc=

     "]]}, 
   {GrayLevel[0], LineBox[{CompressedData["
1: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
YyPHLQIeHTdz0T+hDyqfzdnoqUKsb51MLmq84CfIn8FG27ZppLqM5yCzw1qM
yVI2CglVEjPMz0EObwc6dPBslO04F4iu5KCNKs9MHYvZqJkkkK+1mI007vVm
dPixkXPyaoMkv2y0VtE6vTWSjYzV1r24Y5SNPtCP7yxyZyNCimjfnqEsJH8l
s1cgno1kJt3eD/JnodHm98dyPdlo1I7519owE8n/evst4CobvX3XWuGimYFM
HS0Un2qwkY5kojXpaToS7W9l7ZJjI7P4rUazE7fRySOPtY7NsVCfvP1O96Tb
iGfU41K+gOVDbXZqlvRtxNB4EufZy0IJVyRdZbvS0FhYmv7Dfhbyfn+PP+pQ
GhLP9zlbPM9CwwxZt+qiVKTCock9V2WjN47K0tEOqWjHta90aU02klLykFGa
S0FW7r7RHzF7Cvf4dTruTUGB3zz+0zVhI6OQxrA7a1JQh1PdG1EDNpq99WWz
uV8yGrS5M7XWho3+aFuFqYwloYD66mGrRjYaxBFWdZcnIo++yeVdH9mofP7H
bEBdArp1GzlU9bOR8i+BhGcJ8Wg989LU5x9s1Jq/LT7/TRyajtnd/haLT2ja
17rwvbGIA0ZFZRivn9HTp/HXxKAcif7J+mds1N6ha90jEIM2b1/vl7O3FIVL
7tlsYxKNutaqHfoQXopS9jEyCTcj0YnwvIqY7lJ0WEItKP1QJKJdmN3V9K0U
ZQk3EplBEejx29JZ8fVlqG5Nc5b31Qjk+99e6uSBMpQmeN72g204shd7fPLP
vjL0c7lpubY0DBUTqBvNd5Sh7GSNz5tyw5DUZ1srTaUyVOLVVrmBGIpO35/5
F76zDNFfHQuw4g9F9Y4jlUKYvp14GtlMKwTl3pDIHZcpQx31VcF4vhD00D/+
laZhGRr4TttqmhSE9jXNK1zbX4bmzQs9lPCBKEToav2Kdhly0Y0ovGAWiISH
TX52mpUh5duysyZ2/oicaT6e7V+GSFkbBKQT/RCRYSvlGFaG+qlPlr9f90VJ
I/b8ToQytO9rsXnarA/6tPxwooBdhtZ+fLPjwbwnsntsOn6SUYaeH2Gn0bs8
0PzFWppkdhlKX22yt5l5A9XfVFwsLS1DEUfCKFGD7mhzamc9f2EZUst5+fZa
oDtqPdD+Wz+uDCXLrRu5ePEact2hTVCJLUNPQ3VzM01d0Bfccx+l22XIcPLQ
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
      "], CompressedData["
1:eJwVVG00lVkURkX6wBBiRkMli1aNpPJRnkEIdUWlkgipSDQ3cytMdxpSRkMf
N6HUvOdO9Z73anWru5AiSpErKqV8VKNIISKhTO68/TjrrGet5+z97L2ffSzC
4wIiNdTU1Nbw59ttKY7x+/ehFK3bhnWNFSxOZd7b2POGIP6FDUoLWYzWFHQE
5RM4LH1aVZPAouP9pLj2CIIGZZ/LrmgWxFix9rEvgemsEevtQha/m399fmwX
wetq4YBWEotu+9ZZW/YQFCRPXqEhYVHg1OAmWEOw+3Lb3ttXWVTo7JeMcSNI
y5nr17WNRe4pg13qpgTv0qfargphcU7PaMI5JYNxOhkl1nz81KyTZxzvMJjf
n313JJnFd6O7312vY9BLigaYFBYWixIDbZ8wOChN6M36h8UyxfL5apYEeoMu
Kme+HhOtxeXXvAiGHveXrHvAolH4fanrBoIz4uy1wyoWzjfsHT8GEASFtpvk
LaZIb+xTefN6HoguisxSKBw/hkUKrQg2nRdMty6kcGoNK7sqIpierfHIoZTC
ylpW3sTjtRk6C19mUfjWFpwwTCE4vdMosvMIz6+NsmveQvB+quXD0XiKAyei
OImQoMN00TntrRRZe5WVgbEENfqNO0qWULw6WzmmM5kgU3+zvyyM4uaxHRMN
+H562tr6BP9CUd8vED86xtcza4Zvz28UcZayl0HVBGb2t1oGxRR/GWnGrS/m
9a95X1cRTtEh/Tuio5VgWKAsiVxJkfTqzyhBE0FCbUGiGZ9/yGioKfUdgWRu
iIUkn8KluDVsWTsBc1p0zKeeolKROLakmWCea9GTMQ0UARf3xsrbCBb7UZ/X
zRT7W5IfR7UQaDeNuvk9pVjlZTUYyccPjB+bHdJHYawomqSuJGgd+M+8VEVR
NWdF/x3KzztNO7mvh0KiP7U0KI8gPytFHjWPQ+JD+aWN8QTl+j7BXkEcDEUJ
GsfFBJ9XLvQIDudwwUtV9mMi7y/TyeE3t3Jo/uPQF93tBAfHhxpNW8+hR9Wj
yJhFcDSlMGIwjINnh4eFhy3BzfEfFHXBHFhRX7XvTAKbKR+3WdtxcCs2nd89
h+9/VXjbV2cOq326TIa8CVqGgqff0uPgILHKliwhSI/dHOKqycFOEmbV/DOB
46OWC6OfKKLctvqcsSOInmJODqlz2LdgON+I93fx9uL2OVM5lMuli7WdCDZY
CCPiLDjUxhvp1v/A+yVPfGBiF4Xf49XrO3sY/KRk9QQtFAbPvA00uxlI5ZaV
P9dQrFjwtvvCCwYDtTanH/L8QV2meaWKQZF3jNVMGw72VzQ9zr9k0FPSPTGS
12+rFeqreZmBWcqVOi1zDqbyJn3DHAYZKqUk/SPFhN6UjWWxDDx1D2gE8vPR
104cyYxkcF/lf/jcJA4r3e2Gv6YyMHIJcJrpwCFiKyPfeZaBsiQkLqKMw7Xz
1xyfRzFoqGccBho5ZCSNjgTw77sSdS7Zf+ZwPeZD9AkBg1tPOhc6qMmgSUnL
YS8+36Znjlvmy2DsP7uzYjMDrX1T7hv4y2BWaOJxNouBu3N0auAaGW5Mq38b
fIXfb7Xzm1zVZVCvGveW6WUgmi1MylVwGJMx+0G1gmAwr819lT8H63uTE8S5
Unibse7L+f0QHvXsPPlCCtmv4j3lbhR5OdLubzjmVNrubzj3U0zD8btS1K3z
vZ05g+II92z4FCtFfLbL/SIzCocv8tL0CimWV9XOW2pM8ca4PSetVgo9gaPI
T40idLTaJ/oRzx8x9FLy/9n/sT6dQA==
      "]}]}}]], "Output",
 CellChangeTimes->{
  3.701860045141322*^9, {3.701860227518647*^9, 3.7018602574091387`*^9}, 
   3.7018603220535707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageMeasurements", "[", 
  RowBox[{
   RowBox[{"Out", "[", "113", "]"}], ",", " ", "\"\<Entropy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.701861214479165*^9, 3.701861216431601*^9}, {
  3.7018612763649483`*^9, 3.701861292155222*^9}}],

Cell[BoxData["0.6668898481750624`"], "Output",
 CellChangeTimes->{3.701861293147756*^9}]
}, Open  ]]
},
WindowSize->{958, 1024},
WindowMargins->{{1, Automatic}, {6, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]

